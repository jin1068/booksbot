{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <div class="float-end">
        <a href="index.php?route=catalog/product_database&user_token={{ user_token }}" data-bs-toggle="tooltip" title="返回产品数据库管理" class="btn btn-info me-2" target="_blank"><i class="fa-solid fa-database"></i> 产品数据库</a>
        <button type="submit" form="form-product" data-bs-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa-solid fa-floppy-disk"></i></button>
        <a href="{{ back }}" data-bs-toggle="tooltip" title="{{ button_back }}" class="btn btn-light"><i class="fa-solid fa-reply"></i></a></div>
      <h1>{{ heading_title }}</h1>
      <ol class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
          <li class="breadcrumb-item"><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ol>
    </div>
  </div>
  <div class="container-fluid">
    {% if master_id %}
      <div class="alert alert-warning"><i class="fa-solid fa-circle-exclamation"></i> {{ text_variant }}</div>
    {% endif %}
    <div class="card">
      <div class="card-header"><i class="fa-solid fa-pencil"></i> {{ text_form }}</div>
      <div class="card-body">
        <form id="form-product" action="{{ save }}" method="post" data-oc-toggle="ajax">
          <style>
            .spec-option-grid .spec-option-card { background-color: var(--bs-body-bg); }
            .spec-option-grid .spec-chip { border: 1px solid transparent; padding: 0.25rem 0.65rem; border-radius: 999px; background-color: var(--bs-gray-100); display: inline-flex; align-items: center; gap: 0.4rem; cursor: pointer; transition: background-color 0.2s ease, border-color 0.2s ease; }
            .spec-option-grid .spec-chip .form-check-input { margin-top: 0; margin-right: 0.25rem; }
            .spec-option-grid .spec-chip input:checked + .form-check-label { font-weight: 600; color: var(--bs-primary); }
            .spec-advanced summary { cursor: pointer; }
            .spec-advanced summary::marker { color: var(--bs-primary); }
          </style>
          <div class="row g-4">
            <div class="col-xl-3">
              <div class="card shadow-sm sticky-top" style="top: 84px;">
                <div class="card-header fw-semibold">{{ text_quick_nav }}</div>
                <div class="list-group list-group-flush section-nav">
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-basic" role="button">1. {{ tab_general }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-data" role="button">2. {{ tab_data }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-spec" role="button">3. {{ tab_option }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-sku" role="button">4. {{ text_variant_section }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-media" role="button">5. {{ tab_image }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-marketing" role="button">6. {{ text_marketing_section }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-links" role="button">7. {{ tab_links }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-attribute" role="button">8. {{ tab_attribute }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-seo" role="button">9. {{ tab_seo }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-design" role="button">10. {{ tab_design }}</a>
                  <a class="list-group-item list-group-item-action" href="javascript:void(0);" data-target="section-report" role="button">11. {{ tab_report }}</a>
                </div>
              </div>
            </div>
            <div class="col-xl-9">
              <div class="card shadow-sm mb-4" id="section-basic">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_general }}</h5>
                </div>
                <div class="card-body">
            <ul class="nav nav-tabs">
                            {% for language in languages %}
                              <li class="nav-item"><a href="#language-{{ language.language_id }}" data-bs-toggle="tab" class="nav-link{% if loop.first %} active{% endif %}"><img src="{{ language.image }}" title="{{ language.name }}"/> {{ language.name }}</a></li>
                            {% endfor %}
                          </ul>
                          <div class="tab-content">
                            {% for language in languages %}
                              <div id="language-{{ language.language_id }}" class="tab-pane{% if loop.first %} active{% endif %}">
                                <div class="row mb-3 required">
                                  <label for="input-name-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_name }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <input type="text" name="product_description[{{ language.language_id }}][name]" value="{{ product_description[language.language_id] ? product_description[language.language_id].name }}" placeholder="{{ entry_name }}" id="input-name-{{ language.language_id }}" class="form-control"/>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][name]" value="1" id="input-variant-name-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-name-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].name %} checked{% endif %}/> <label for="input-variant-name-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                    <div id="error-name-{{ language.language_id }}" class="invalid-feedback"></div>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="input-description-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_description }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <div class="form-control h-100 p-0 border-0 rounded-0">
                                        <textarea name="product_description[{{ language.language_id }}][description]" placeholder="{{ entry_description }}" id="input-description-{{ language.language_id }}" data-oc-toggle="ckeditor" data-lang="{{ ckeditor }}" class="w-100 position-relative">{{ product_description[language.language_id] ? product_description[language.language_id].description }}</textarea>
                                      </div>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][description]" value="1" id="input-variant-description-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-description-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].description %} checked{% endif %}/> <label for="input-variant-description-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                  </div>
                                </div>
                                <div class="row mb-3 required">
                                  <label for="input-meta-title-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_meta_title }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <input type="text" name="product_description[{{ language.language_id }}][meta_title]" value="{{ product_description[language.language_id] ? product_description[language.language_id].meta_title }}" placeholder="{{ entry_meta_title }}" id="input-meta-title-{{ language.language_id }}" class="form-control"/>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][meta_title]" value="1" id="input-variant-meta-title-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-meta-title-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].meta_title %} checked{% endif %}/> <label for="input-variant-meta-title-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                    <div id="error-meta-title-{{ language.language_id }}" class="invalid-feedback"></div>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="input-meta-description-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_meta_description }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <textarea name="product_description[{{ language.language_id }}][meta_description]" rows="5" placeholder="{{ entry_meta_description }}" id="input-meta-description-{{ language.language_id }}" class="form-control">{{ product_description[language.language_id] ? product_description[language.language_id].meta_description }}</textarea>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][meta_description]" value="1" id="input-variant-meta-description-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-meta-description-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].meta_description %} checked{% endif %}/> <label for="input-variant-meta-description-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="input-meta-keyword-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_meta_keyword }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <textarea name="product_description[{{ language.language_id }}][meta_keyword]" rows="5" placeholder="{{ entry_meta_keyword }}" id="input-meta-keyword-{{ language.language_id }}" class="form-control">{{ product_description[language.language_id] ? product_description[language.language_id].meta_keyword }}</textarea>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][meta_keyword]" value="1" id="input-variant-meta-keyword-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-meta-keyword-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].meta_keyword %} checked{% endif %}/> <label for="input-variant-meta-keyword-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="input-tag-{{ language.language_id }}" class="col-sm-2 col-form-label">{{ entry_tag }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <input type="text" name="product_description[{{ language.language_id }}][tag]" value="{{ product_description[language.language_id] ? product_description[language.language_id].tag }}" placeholder="{{ entry_tag }}" id="input-tag-{{ language.language_id }}" class="form-control"/>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_description][{{ language.language_id }}][tag]" value="1" id="input-variant-tag-{{ language.language_id }}" data-oc-toggle="switch" data-oc-target="#input-tag-{{ language.language_id }}" class="form-check-input"{% if override.product_description[language.language_id].tag %} checked{% endif %}/> <label for="input-variant-tag-{{ language.language_id }}" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                    <div class="form-text">{{ help_tag }}</div>
                                  </div>
                                </div>
                              </div>
                            {% endfor %}
                          </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-data">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_data }}</h5>
                </div>
                <div class="card-body">
            <input type="hidden" name="master_id" value="{{ master_id }}"/>
                          <fieldset>
                            <legend>{{ text_model }}</legend>
                            <div class="row mb-3 required">
                              <label for="input-model" class="col-sm-2 col-form-label">{{ entry_model }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="model" value="{{ model }}" placeholder="{{ entry_model }}" id="input-model" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[model]" value="1" id="input-variant-model" data-oc-toggle="switch" data-oc-target="#input-model" class="form-check-input"{% if override.model %} checked{% endif %}/> <label for="input-variant-model" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                                <div id="error-model" class="invalid-feedback"></div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label class="col-sm-2 col-form-label">{{ entry_product_code }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <select id="input-code" class="form-select">
                                    {% for identifier in identifiers %}
                                      <option value="{{ identifier.code }}">{{ identifier.code }}</option>
                                    {% endfor %}
                                  </select>
                                  <input type="text" value="" placeholder="{{ entry_product_code }}" id="input-value" class="form-control w-75"/>
                                  <button type="button" id="button-code" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button>
                                </div>
                                <div class="input-group">
                                  <div class="form-control p-0" style="height: 150px; overflow: auto;">
                                    <table id="product-code" class="table m-0">
                                      <tbody>
                                        {% set code_row = 0 %}
                                        {% for product_code in product_codes %}
                                          <tr id="code-row-{{ code_row }}">
                                            <td style="width: 1px;">{{ product_code.code }}<input type="hidden" name="product_code[{{ code_row }}][code]" value="{{ product_code.code }}"/></td>
                                            <td id="input-code-{{ code_row }}">{{ product_code.value }}
                                              <div id="error-code-{{ code_row }}" class="invalid-feedback"></div>
                                              <input type="hidden" name="product_code[{{ code_row }}][value]" value="{{ product_code.value }}"></td>
                                            <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                          </tr>
                                          {% set code_row = code_row + 1 %}
                                        {% endfor %}
                                      </tbody>
                                    </table>
                                  </div>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[product_code]" value="1" id="input-variant-code" data-oc-toggle="switch" data-oc-target="#input-code, #product-code" class="form-check-input"{% if override.product_code %} checked{% endif %}/>
                                        <label for="input-variant-code" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                                <div class="form-text">{{ help_product_code }}</div>
                              </div>
                            </div>
                          </fieldset>
                          <fieldset>
                            <legend>{{ text_price }}</legend>
                            
                            <!-- 动态配置管理区域 -->
                            <div class="row mb-4">
                              <div class="col-12">
                                <div class="card border-primary">
                                  <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="fas fa-mobile-alt me-2"></i>iPhone产品选项管理</h6>
                                    <div>
                                      <button type="button" class="btn btn-success btn-sm" onclick="directAddIphoneOptions()">
                                        <i class="fas fa-bolt"></i> 批量添加选项
                                      </button>
                                    </div>
                                  </div>
                                  <div class="card-body">
                                    <div class="alert alert-info">
                                      <h6 class="alert-heading"><i class="fas fa-info-circle me-2"></i>操作说明</h6>
                                      <p class="mb-2">点击上方"批量添加选项"按钮，将自动为所有iPhone产品添加：</p>
                                      <ul class="mb-0">
                                        <li><strong>颜色选项</strong>：黑色、白色、粉色、青色、深蓝色等</li>
                                        <li><strong>存储选项</strong>：128GB、256GB、512GB、1TB等（含价格调整）</li>
                                      </ul>
                                    </div>
                                    
                                    <div id="addResult" class="mt-3" style="display: none;"></div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            
                            <div class="row mb-3">
                              <label for="input-price" class="col-sm-2 col-form-label">{{ entry_price }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="price" value="{{ price }}" placeholder="{{ entry_price }}" id="input-price" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[price]" value="1" id="input-variant-price" data-oc-toggle="switch" data-oc-target="#input-price" class="form-check-input"{% if override.price %} checked{% endif %}/> <label for="input-variant-price" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                                <div class="form-text">基础价格，配置选项将在此基础上调整</div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-tax-class" class="col-sm-2 col-form-label">{{ entry_tax_class }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <select name="tax_class_id" id="input-tax-class" class="form-select">
                                    <option value="0">{{ text_none }}</option>
                                    {% for tax_class in tax_classes %}
                                      <option value="{{ tax_class.tax_class_id }}"{% if tax_class.tax_class_id == tax_class_id %} selected{% endif %}>{{ tax_class.title }}</option>
                                    {% endfor %}
                                  </select>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[tax_class_id]" value="1" id="input-variant-tax-class" data-oc-toggle="switch" data-oc-target="#input-tax-class" class="form-check-input"{% if override.tax_class_id %} checked{% endif %}/> <label for="input-variant-tax-class" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                          </fieldset>
                          <fieldset>
                            <legend>{{ text_stock }}</legend>
                            <div class="row mb-3">
                              <label for="input-quantity" class="col-sm-2 col-form-label">{{ entry_quantity }}</label>
                              <div class="col-sm-10">
                                <input type="text" name="quantity" value="{{ quantity }}" placeholder="{{ entry_quantity }}" id="input-quantity" class="form-control"/>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-minimum" class="col-sm-2 col-form-label">{{ entry_minimum }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="minimum" value="{{ minimum }}" placeholder="{{ entry_minimum }}" id="input-minimum" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[minimum]" value="1" id="input-variant-minimum" data-oc-toggle="switch" data-oc-target="#input-minimum" class="form-check-input"{% if override.minimum %} checked{% endif %}/> <label for="input-variant-minimum" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                                <div class="form-text">{{ help_minimum }}</div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label class="col-sm-2 col-form-label">{{ entry_subtract }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <div id="input-subtract" class="form-check form-switch form-switch-lg">
                                    <input type="hidden" name="subtract" value="0"/> <input type="checkbox" name="subtract" value="1" class="form-check-input"{% if subtract %} checked{% endif %}/>
                                  </div>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[subtract]" value="1" id="input-variant-subtract" data-oc-toggle="switch" data-oc-target="#input-subtract" class="form-check-input"{% if override.subtract %} checked{% endif %}/> <label for="input-variant-subtract" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-stock-status" class="col-sm-2 col-form-label">{{ entry_stock_status }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <select name="stock_status_id" id="input-stock-status" class="form-select">
                                    {% for stock_status in stock_statuses %}
                                      <option value="{{ stock_status.stock_status_id }}"{% if stock_status.stock_status_id == stock_status_id %} selected{% endif %}>{{ stock_status.name }}</option>
                                    {% endfor %}
                                  </select>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[stock_status_id]" value="1" id="input-variant-stock-status" data-oc-toggle="switch" data-oc-target="#input-stock-status" class="form-check-input"{% if override.stock_status_id %} checked{% endif %}/> <label for="input-variant-stock-status" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                                <div class="form-text">{{ help_stock_status }}</div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-location" class="col-sm-2 col-form-label">{{ entry_location }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="location" value="{{ location }}" placeholder="{{ entry_location }}" id="input-location" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[location]" value="1" id="input-variant-location" data-oc-toggle="switch" data-oc-target="#input-location" class="form-check-input"{% if override.location %} checked{% endif %}/> <label for="input-variant-location" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-date-available" class="col-sm-2 col-form-label">{{ entry_date_available }}</label>
                              <div class="col-sm-10 col-md-4">
                                <div class="input-group">
                                  <input type="date" name="date_available" value="{{ date_available }}" placeholder="{{ entry_date_available }}" id="input-date-available" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[date_available]" value="1" id="input-variant-date-available" data-oc-toggle="switch" data-oc-target="#input-date-available" class="form-check-input"{% if override.date_available %} checked{% endif %}/> <label for="input-variant-date-available" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                          </fieldset>
                          <fieldset>
                            <legend>{{ text_specification }}</legend>
                            <div class="row mb-3">
                              <label class="col-sm-2 col-form-label">{{ entry_shipping }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <div id="input-shipping" class="form-check form-switch form-switch-lg">
                                    <input type="hidden" name="shipping" value="0"/> <input type="checkbox" name="shipping" value="1" class="form-check-input"{% if shipping %} checked{% endif %}/>
                                  </div>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[shipping]" value="1" id="input-variant-shipping" data-oc-toggle="switch" data-oc-target="#input-shipping" class="form-check-input"{% if override.shipping %} checked{% endif %}/> <label for="input-variant-shipping" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-length" class="col-sm-2 col-form-label">{{ entry_dimension }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="length" value="{{ length }}" placeholder="{{ entry_length }}" id="input-length" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[length]" value="1" id="input-variant-length" data-oc-toggle="switch" data-oc-target="#input-length" class="form-check-input"{% if override.length %} checked{% endif %}/> <label for="input-variant-length" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                  <input type="text" name="width" value="{{ width }}" placeholder="{{ entry_width }}" id="input-width" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[width]" value="1" id="input-variant-width" data-oc-toggle="switch" data-oc-target="#input-width" class="form-check-input"{% if override.width %} checked{% endif %}/> <label for="input-variant-width" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                  <input type="text" name="height" value="{{ height }}" placeholder="{{ entry_height }}" id="input-height" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[height]" value="1" id="input-variant-height" data-oc-toggle="switch" data-oc-target="#input-height" class="form-check-input"{% if override.height %} checked{% endif %}/> <label for="input-variant-height" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-length-class" class="col-sm-2 col-form-label">{{ entry_length_class }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <select name="length_class_id" id="input-length-class" class="form-select">
                                    {% for length_class in length_classes %}
                                      <option value="{{ length_class.length_class_id }}"{% if length_class.length_class_id == length_class_id %} selected{% endif %}>{{ length_class.title }}</option>
                                    {% endfor %}
                                  </select>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[length_class_id]" value="1" id="input-variant-length-class" data-oc-toggle="switch" data-oc-target="#input-length-class" class="form-check-input"{% if override.length_class_id %} checked{% endif %}/> <label for="input-variant-length-class" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-weight" class="col-sm-2 col-form-label">{{ entry_weight }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="text" name="weight" value="{{ weight }}" placeholder="{{ entry_weight }}" id="input-weight" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[weight]" value="1" id="input-variant-weight" data-oc-toggle="switch" data-oc-target="#input-weight" class="form-check-input"{% if override.weight %} checked{% endif %}/> <label for="input-variant-weight" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-weight-class" class="col-sm-2 col-form-label">{{ entry_weight_class }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <select name="weight_class_id" id="input-weight-class" class="form-select">
                                    {% for weight_class in weight_classes %}
                                      <option value="{{ weight_class.weight_class_id }}"{% if weight_class.weight_class_id == weight_class_id %} selected{% endif %}>{{ weight_class.title }}</option>
                                    {% endfor %}
                                  </select>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[weight_class_id]" value="1" id="input-variant-weight-class" data-oc-toggle="switch" data-oc-target="#input-weight-class" class="form-check-input"{% if override.weight_class_id %} checked{% endif %}/> <label for="input-variant-weight-class" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label class="col-sm-2 col-form-label">{{ entry_status }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <div class="form-check form-switch form-switch-lg">
                                    <input type="hidden" name="status" value="0"/> <input type="checkbox" name="status" value="1" id="input-status" class="form-check-input"{% if status %} checked{% endif %}/>
                                  </div>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[status]" value="1" id="input-variant-status" data-oc-toggle="switch" data-oc-target="#input-status" class="form-check-input"{% if override.status %} checked{% endif %}/> <label for="input-variant-status" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                            <div class="row mb-3">
                              <label for="input-sort-order" class="col-sm-2 col-form-label">{{ entry_sort_order }}</label>
                              <div class="col-sm-10">
                                <div class="input-group">
                                  <input type="number" name="sort_order" value="{{ sort_order }}" placeholder="{{ entry_sort_order }}" id="input-sort-order" class="form-control"/>
                                  {% if master_id %}
                                    <div class="input-group-text">
                                      <div class="form-check form-switch">
                                        <input type="checkbox" name="override[sort_order]" value="1" id="input-variant-sort-order" data-oc-toggle="switch" data-oc-target="#input-sort-order" class="form-check-input"{% if override.sort_order %} checked{% endif %}/> <label for="input-variant-sort-order" class="form-check-label"></label>
                                      </div>
                                    </div>
                                  {% endif %}
                                </div>
                              </div>
                            </div>
                          </fieldset>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-spec">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_option }}</h5>
                </div>
                <div class="card-body">
                  <p class="text-muted mb-3">{{ text_specs_builder|default('配置规格组合以自动生成 SKU 列表。') }}</p>
                  {% if spec_options %}
                    <div class="row g-3 spec-option-grid" id="spec-option-grid">
                      {% for option in spec_options %}
                        <div class="col-md-6">
                          <div class="border rounded-3 h-100 p-3 spec-option-card" data-spec-option="{{ option.product_option_id }}">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                              <h6 class="mb-0">{{ option.name }}</h6>
                              <span class="badge text-bg-light">{{ option.values|length }} {{ text_option_value }}</span>
                            </div>
                            <div class="d-flex flex-wrap gap-2" data-spec-option-values>
                              {% for value in option.values %}
                                <label class="spec-chip form-check m-0" data-spec-value="{{ value.product_option_value_id }}">
                                  <input class="form-check-input" type="checkbox" value="{{ value.product_option_value_id }}"{% if value.product_option_value_id in selected_option_value_ids %} checked{% endif %}/>
                                  <span class="form-check-label d-flex align-items-center gap-2">
                                    {% if value.image %}<img src="{{ value.thumb }}" alt="{{ value.name }}" class="rounded" width="26" height="26"/>{% endif %}
                                    {{ value.name }}
                                  </span>
                                </label>
                              {% endfor %}
                            </div>
                          </div>
                        </div>
                      {% endfor %}
                    </div>
                  {% else %}
                    <div class="alert alert-info"><i class="fa-solid fa-circle-info me-1"></i> {{ text_specs_empty|default('暂无规格，请在下方高级规格管理中添加选项与选项值。') }}</div>
                  {% endif %}
                  <div class="d-flex flex-wrap gap-3 mt-3">
                    <button type="button" class="btn btn-outline-primary" id="button-generate-variants"><i class="fa-solid fa-wand-magic-sparkles me-1"></i>{{ text_generate_variant|default('生成 SKU 组合') }}</button>
                    <button type="button" class="btn btn-outline-secondary" id="button-clear-variants"><i class="fa-regular fa-trash-can me-1"></i>{{ text_clear_variant|default('清空所有 SKU') }}</button>
                  </div>
                  <div class="mt-4">
                    <details class="spec-advanced" open>
                      <summary class="btn btn-link px-0 text-decoration-none fw-semibold"><i class="fa-solid fa-gear me-1"></i>{{ text_option_manage|default('高级规格管理（选项维护）') }}</summary>
                      <div class="mt-3" id="spec-option-advanced">
            <div class="mb-4">
                              <div class="card border shadow-sm">
                                <div class="card-header d-flex justify-content-between align-items-center bg-light">
                                  <h5 class="mb-0">{{ tab_option }}</h5>
                                  <span class="text-muted small">{{ spec_options ? spec_options|length : 0 }} {{ text_option_value }}</span>
                                </div>
                                <div class="card-body">
                                  <p class="text-muted mb-3">{{ text_specs_builder|default('配置规格组合以自动生成 SKU 列表。') }}</p>
                                  {% if spec_options %}
                                    <div class="row g-3 spec-option-grid" id="spec-option-grid">
                                      {% for option in spec_options %}
                                        <div class="col-md-6">
                                          <div class="border rounded-3 h-100 p-3 spec-option-card" data-spec-option="{{ option.product_option_id }}">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                              <h6 class="mb-0">{{ option.name }}</h6>
                                              <span class="badge text-bg-light">{{ option.values|length }} {{ text_option_value }}</span>
                                            </div>
                                            <div class="d-flex flex-wrap gap-2" data-spec-option-values>
                                              {% for value in option.values %}
                                                <label class="spec-chip form-check m-0" data-spec-value="{{ value.product_option_value_id }}">
                                                  <input class="form-check-input" type="checkbox" value="{{ value.product_option_value_id }}"{% if value.product_option_value_id in selected_option_value_ids %} checked{% endif %}/>
                                                  <span class="form-check-label d-flex align-items-center gap-2">
                                                    {% if value.image %}
                                                      <img src="{{ value.thumb }}" alt="{{ value.name }}" class="rounded" width="26" height="26"/>
                                                    {% endif %}
                                                    {{ value.name }}
                                                  </span>
                                                </label>
                                              {% endfor %}
                                            </div>
                                          </div>
                                        </div>
                                      {% endfor %}
                                    </div>
                                  {% else %}
                                    <div class="alert alert-info"><i class="fa-solid fa-circle-info me-1"></i> {{ text_specs_empty|default('暂无规格，请在下方高级规格管理中添加选项与选项值。') }}</div>
                                  {% endif %}
                                  <div class="d-flex flex-wrap gap-3 mt-3">
                                    <button type="button" class="btn btn-outline-primary" id="button-generate-variants"><i class="fa-solid fa-wand-magic-sparkles me-1"></i>{{ text_generate_variant|default('生成 SKU 组合') }}</button>
                                    <button type="button" class="btn btn-outline-secondary" id="button-clear-variants"><i class="fa-regular fa-trash-can me-1"></i>{{ text_clear_variant|default('清空所有 SKU') }}</button>
                                  </div>
                                </div>
                              </div>
                            </div>

                            <div class="mb-4">
                              <div class="card border shadow-sm">
                                <div class="card-header d-flex justify-content-between align-items-center bg-light">
                                  <h5 class="mb-0">SKU 鍒楄〃</h5>
                                </div>
                                <div class="card-body">
                                  <div class="table-responsive">
                                    <table class="table align-middle" id="variant-table">
                                      <thead class="table-light">
                                        <tr>
                                          <th style="min-width: 220px;">{{ text_variant_combo|default('缁勫悎') }}</th>
                                          <th style="min-width: 120px;">SKU</th>
                                          <th style="min-width: 140px;">{{ entry_model }}</th>
                                          <th style="min-width: 110px;">{{ entry_price }}</th>
                                          <th style="min-width: 110px;">{{ entry_quantity }}</th>
                                          <th style="min-width: 110px;">{{ entry_weight }}</th>
                                          <th style="min-width: 100px;">{{ entry_status }}</th>
                                          <th style="min-width: 90px;">{{ entry_sort_order }}</th>
                                          <th style="width: 150px;">{{ text_variant_images }}</th>
                                          <th class="text-end" style="width: 60px;"></th>
                                        </tr>
                                      </thead>
                                      <tbody id="variant-table-body"></tbody>
                                    </table>
                                  </div>
                                  <div class="alert alert-secondary small" id="variant-empty-hint">
                                    <i class="fa-solid fa-lightbulb me-1"></i>{{ text_variant_hint }}
                                  </div>
                                </div>
                              </div>
                            </div>

                            <details class="mt-4 spec-advanced" open>
                              <summary class="btn btn-link px-0 text-decoration-none fw-semibold"><i class="fa-solid fa-gear me-1"></i>{{ text_option_manage|default('高级规格管理（选项维护）') }}</summary>
                              <div class="mt-3">

                            <div id="option">

                              {% set option_row = 0 %}
                              {% set option_value_row = 0 %}
                              {% for product_option in product_options %}

                                <fieldset id="option-row-{{ option_row }}">
                                  <legend>{{ product_option.name }}</legend>
                                  <input type="hidden" name="product_option[{{ option_row }}][product_option_id]" value="{{ product_option.product_option_id }}"/> <input type="hidden" name="product_option[{{ option_row }}][name]" value="{{ product_option.name }}"/> <input type="hidden" name="product_option[{{ option_row }}][option_id]" value="{{ product_option.option_id }}"/> <input type="hidden" name="product_option[{{ option_row }}][type]" value="{{ product_option.type }}"/>

                                  <div class="row align-items-center">
                                    <div class="col-11">

                                      <div class="mb-3">
                                        <label for="input-required-{{ option_row }}" class="form-label">{{ entry_required }}</label> <select name="product_option[{{ option_row }}][required]" id="input-required-{{ option_row }}" class="form-select">
                                          <option value="1"{% if product_option.required %} selected{% endif %}>{{ text_enabled }}</option>
                                          <option value="0"{% if not product_option.required %} selected{% endif %}>{{ text_disabled }}</option>
                                        </select>
                                      </div>

                                      {% if product_option.type == 'text' %}
                                        <div class="mb-3">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <input type="text" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control"/>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'textarea' %}
                                        <div class="mb-3">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <textarea name="product_option[{{ option_row }}][value]" rows="5" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control">{{ product_option.value }}</textarea>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'file' %}
                                        <div class="mb-3 d-none">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <input type="text" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control"/>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'date' %}
                                        <div class="mb-3">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <input type="date" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control"/>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'time' %}
                                        <div class="mb-3">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <input type="time" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control"/>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'datetime' %}
                                        <div class="mb-3">
                                          <label for="input-option-{{ option_row }}" class="form-label">{{ entry_option_value }}</label> <input type="datetime-local" name="product_option[{{ option_row }}][value]" value="{{ product_option.value }}" placeholder="{{ entry_option_value }}" id="input-option-{{ option_row }}" class="form-control"/>
                                        </div>
                                      {% endif %}

                                      {% if product_option.type == 'select' or product_option.type == 'radio' or product_option.type == 'checkbox' or product_option.type == 'image' %}
                                        <div class="table-responsive">
                                          <table class="table table-bordered table-hover">
                                            <thead>
                                              <tr>
                                                <th>{{ entry_option_value }}</th>
                                                <th class="text-end">{{ entry_quantity }}</th>
                                                <th>{{ entry_subtract }}</th>
                                                <th class="text-end">{{ entry_price }}</th>
                                                <th class="text-end">{{ entry_points }}</th>
                                                <th class="text-end">{{ entry_weight }}</th>
                                                <th></th>
                                              </tr>
                                            </thead>
                                            <tbody id="option-value-{{ option_row }}">
                                              {% for product_option_value in product_option.product_option_value %}
                                                <tr id="option-value-row-{{ option_value_row }}">
                                                  <td>{{ product_option_value.name }}
                                                    <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][option_value_id]" value="{{ product_option_value.option_value_id }}"/> <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][product_option_value_id]" value="{{ product_option_value.product_option_value_id }}"/></td>
                                                  <td class="text-end">{{ product_option_value.quantity }} <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][quantity]" value="{{ product_option_value.quantity }}"/></td>
                                                  <td>{% if product_option_value.subtract %}
                                                      {{ text_yes }}
                                                    {% else %}
                                                      {{ text_no }}
                                                    {% endif %}
                                                    <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][subtract]" value="{{ product_option_value.subtract }}"/></td>
                                                  <td class="text-end">{{ product_option_value.price_prefix }}{{ product_option_value.price }}
                                                    <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][price_prefix]" value="{{ product_option_value.price_prefix }}"/> <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][price]" value="{{ product_option_value.price }}"/></td>
                                                  <td class="text-end">{{ product_option_value.points_prefix }}{{ product_option_value.points }}
                                                    <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points_prefix]" value="{{ product_option_value.points_prefix }}"/> <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][points]" value="{{ product_option_value.points }}"/></td>
                                                  <td class="text-end">{{ product_option_value.weight_prefix }}{{ product_option_value.weight }}
                                                    <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][weight_prefix]" value="{{ product_option_value.weight_prefix }}"/> <input type="hidden" name="product_option[{{ option_row }}][product_option_value][{{ option_value_row }}][weight]" value="{{ product_option_value.weight }}"/></td>
                                                  <td class="text-end"><button type="button" data-bs-toggle="tooltip" title="{{ button_edit }}" data-option-row="{{ option_row }}" data-option-value-row="{{ option_value_row }}" class="btn btn-primary"><i class="fa-solid fa-pencil"></i></button> <button type="button" onclick="$('#option-value-row-{{ option_value_row }}').remove();" data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                                </tr>
                                                {% set option_value_row = option_value_row + 1 %}
                                              {% endfor %}
                                            </tbody>
                                            <tfoot>
                                              <tr>
                                                <td colspan="6"></td>
                                                <td class="text-end"><button type="button" data-bs-toggle="tooltip" title="{{ button_option_value_add }}" data-option-row="{{ option_row }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>
                                              </tr>
                                            </tfoot>
                                          </table>
                                          <select id="product-option-values-{{ option_row }}" class="d-none">
                                            {% if option_values[product_option.option_id] %}
                                              {% for option_value in option_values[product_option.option_id] %}
                                                <option value="{{ option_value.option_value_id }}">{{ option_value.name }}</option>
                                              {% endfor %}
                                            {% endif %}
                                          </select>
                                        </div>
                                      {% endif %}
                                    </div>

                                    <div class="col">
                                      <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="{{ button_remove }}" onclick="$('#option-row-{{ option_row }}').remove();"><i class="fa-solid fa-minus-circle"></i></button>
                                    </div>
                                  </div>
                                </fieldset>
                                {% set option_row = option_row + 1 %}
                              {% endfor %}
                            </div>
                            <fieldset>
                              <legend class="float-none">{{ text_option_add }}</legend>
                              <div class="row mb-3">
                                <label for="input-option" class="col-sm-2 col-form-label">{{ entry_option }}</label>
                                <div class="col-sm-10">
                                  <input type="text" name="option" value="" placeholder="{{ entry_option }}" id="input-option" data-oc-target="autocomplete-option" class="form-control" autocomplete="off"/>
                                  <ul id="autocomplete-option" class="dropdown-menu"></ul>
                                  <div class="form-text">{{ help_option }}</div>
                                </div>
                              </div>
                            </fieldset>
                          </div>
                      </div>
                    </details>
                  </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-sku">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ text_variant_section }}</h5>
                </div>
                <div class="card-body">
                  <div class="table-responsive">
                    <table class="table align-middle" id="variant-table">
                      <thead class="table-light">
                        <tr>
                          <th style="min-width: 220px;">{{ text_variant_combo }}</th>
                          <th style="min-width: 120px;">SKU</th>
                          <th style="min-width: 140px;">{{ entry_model }}</th>
                          <th style="min-width: 110px;">{{ entry_price }}</th>
                          <th style="min-width: 110px;">{{ entry_quantity }}</th>
                          <th style="min-width: 110px;">{{ entry_weight }}</th>
                          <th style="min-width: 90px;">{{ entry_status }}</th>
                          <th style="min-width: 90px;">{{ entry_sort_order }}</th>
                          <th style="width: 150px;">{{ text_variant_images }}</th>
                          <th class="text-end" style="width: 60px;"></th>
                        </tr>
                      </thead>
                      <tbody id="variant-table-body"></tbody>
                    </table>
                  </div>
                  <div class="alert alert-secondary small" id="variant-empty-hint">
                    <i class="fa-solid fa-lightbulb me-1"></i>{{ text_variant_hint }}
                  </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-media">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_image }}</h5>
                </div>
                <div class="card-body">
            <fieldset>
                            <legend>{{ text_image }}</legend>
                            <div id="image" class="border rounded d-block" style="max-width: 300px;">
                              <img src="{{ thumb }}" alt="" title="" id="thumb-image" data-oc-placeholder="{{ placeholder }}" class="img-fluid"/> <input type="hidden" name="image" value="{{ image }}" id="input-image"/>
                              <div class="d-grid">
                                <button type="button" data-oc-toggle="image" data-oc-target="#input-image" data-oc-thumb="#thumb-image" class="btn btn-primary rounded-0"><i class="fa-solid fa-pencil"></i> {{ button_edit }}</button>
                                <button type="button" data-oc-toggle="clear" data-oc-target="#input-image" data-oc-thumb="#thumb-image" class="btn btn-warning rounded-0"><i class="fa-regular fa-trash-can"></i> {{ button_clear }}</button>
                                {% if master_id %}
                                  <div class="mx-auto w-25">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[image]" value="1" id="input-variant-image" data-oc-toggle="switch" data-oc-target="#image" class="form-check-input"{% if override.image %} checked{% endif %}/> <label for="input-variant-image" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                            </div>
                            <div class="mt-2">
                              <label for="input-main-image-url" class="form-label small text-muted">或直接输入主图链接：</label>
                              <div class="input-group">
                                <input type="text" id="input-main-image-url" class="form-control" placeholder="例如: catalog/demo/product.jpg 或完整URL" value="{{ image }}"/>
                                <button type="button" id="button-apply-main-image-url" class="btn btn-success"><i class="fa-solid fa-check"></i> 应用</button>
                              </div>
                              <small class="form-text text-muted">支持相对路径（如: catalog/product.jpg）或完整URL链接</small>
                            </div>
                          </fieldset>
                          <fieldset>
                            <legend>{{ text_image_additional }}</legend>
                            <div class="alert alert-info">
                              <i class="fa-solid fa-lightbulb"></i> <strong>批量导入图片：</strong>
                              <button type="button" class="btn btn-sm btn-primary ms-2" onclick="document.getElementById('batch-file-input').click();">
                                <i class="fa-solid fa-images"></i> 批量导入文件
                              </button>
                              <button type="button" class="btn btn-sm btn-success ms-2" onclick="batchImportImageUrls();">
                                <i class="fa-solid fa-link"></i> 批量导入链接
                              </button>
                              <input type="file" id="batch-file-input" multiple accept="image/*" style="display:none;" onchange="batchUploadImages(this.files)">
                              <small class="d-block mt-2">
                                <strong>智能分配：</strong>第1张自动设为主图片，第2张起添加到附加图片。支持文件上传或URL导入。
                              </small>
                            </div>
                            <div class="table-responsive">
                              <table id="product-image" class="table table-bordered table-hover">
                                <thead>
                                  <tr>
                                    <th>{{ entry_image }}</th>
                                    <th>{{ entry_sort_order }}</th>
                                    <th class="text-end">
                                      {% if master_id %}
                                        <div class="form-check form-switch">
                                          <input type="checkbox" name="override[product_image]" value="1" id="input-variant-product-image" data-oc-toggle="switch" data-oc-target="#product-image" class="form-check-input"{% if override.product_image %} checked{% endif %}/> <label for="input-variant-product-image" class="form-check-label"></label>
                                        </div>
                                      {% endif %}</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  {% set image_row = 0 %}
                                  {% for product_image in product_images %}
                                    <tr id="product-image-row-{{ image_row }}">
                                      <td>
                                        <div class="border rounded d-block" style="max-width: 300px;">
                                          <img src="{{ product_image.thumb }}" alt="" title="" id="product-image-{{ image_row }}" data-oc-placeholder="{{ placeholder }}" class="img-fluid"/> <input type="hidden" name="product_image[{{ image_row }}][image]" value="{{ product_image.image }}" id="input-product-image-{{ image_row }}"/>
                                          <div class="d-grid">
                                            <button type="button" data-oc-toggle="image" data-oc-target="#input-product-image-{{ image_row }}" data-oc-thumb="#product-image-{{ image_row }}" class="btn btn-primary rounded-0"><i class="fa-solid fa-pencil"></i> {{ button_edit }}</button>
                                            <button type="button" data-oc-toggle="clear" data-oc-target="#input-product-image-{{ image_row }}" data-oc-thumb="#product-image-{{ image_row }}" class="btn btn-warning rounded-0"><i class="fa-regular fa-trash-can"></i> {{ button_clear }}</button>
                                          </div>
                                          <div class="mt-2">
                                            <label class="form-label small">或直接输入图片链接：</label>
                                            <div class="input-group input-group-sm">
                                              <input type="text" id="input-image-url-{{ image_row }}" class="form-control" placeholder="输入完整URL或相对路径，如: catalog/products/image.jpg"/>
                                              <button type="button" class="btn btn-success btn-apply-image-url" data-row="{{ image_row }}"><i class="fa-solid fa-check"></i> 应用</button>
                                            </div>
                                            <small class="text-muted">支持相对路径(catalog/...)或完整URL(https://...)</small>
                                          </div>
                                        </div>
                                      </td>
                                      <td><input type="text" name="product_image[{{ image_row }}][sort_order]" value="{{ product_image.sort_order }}" placeholder="{{ entry_sort_order }}" class="form-control"/></td>
                                      <td class="text-end"><button type="button" onclick="$('#product-image-row-{{ image_row }}').remove();" data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                    </tr>
                                    {% set image_row = image_row + 1 %}
                                  {% endfor %}
                                </tbody>
                                <tfoot>
                                  <tr>
                                    <td colspan="2"></td>
                                    <td class="text-end"><button type="button" id="button-image" data-bs-toggle="tooltip" title="{{ button_image_add }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>
                                  </tr>
                                </tfoot>
                              </table>
                            </div>
                          </fieldset>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-marketing">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ text_marketing_section }}</h5>
                </div>
                <div class="card-body">
                  <div class="mb-4">
                    <h6 class="fw-semibold mb-3"><i class="fa-solid fa-badge-percent me-2 text-primary"></i>{{ tab_discount }}</h6>
                <div class="table-responsive">
                                <table id="product-discount" class="table table-bordered table-hover">
                                  <thead>
                                    <tr>
                                      <th>{{ entry_customer_group }}</th>
                                      <th class="text-end">{{ entry_quantity }}</th>
                                      <th class="text-end">{{ entry_priority }}</th>
                                      <th class="text-end">{{ entry_price }}</th>
                                      <th class="text-end">{{ entry_type }}</th>
                                      <th class="text-end">{{ entry_special }}</th>
                                      <th>{{ entry_date_start }}</th>
                                      <th>{{ entry_date_end }}</th>
                                      <th class="text-end">{% if master_id %}
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[product_discount]" value="1" id="input-variant-product-discount" data-oc-toggle="switch" data-oc-target="#product-discount" class="form-check-input"{% if override.product_discount %} checked{% endif %}/> <label for="input-variant-product-discount" class="form-check-label"></label>
                                          </div>
                                        {% endif %}</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    {% set discount_row = 0 %}
                                    {% for product_discount in product_discounts %}
                                      <tr id="discount-row-{{ discount_row }}">
                                        <td><select name="product_discount[{{ discount_row }}][customer_group_id]" class="form-select">
                                            {% for customer_group in customer_groups %}
                                              <option value="{{ customer_group.customer_group_id }}"{% if customer_group.customer_group_id == product_discount.customer_group_id %} selected{% endif %}>{{ customer_group.name }}</option>
                                            {% endfor %}
                                          </select></td>
                                        <td class="text-end"><input type="text" name="product_discount[{{ discount_row }}][quantity]" value="{{ product_discount.quantity }}" placeholder="{{ entry_quantity }}" class="form-control"/></td>
                                        <td class="text-end"><input type="text" name="product_discount[{{ discount_row }}][priority]" value="{{ product_discount.priority }}" placeholder="{{ entry_priority }}" class="form-control"/></td>
                                        <td class="text-end"><input type="text" name="product_discount[{{ discount_row }}][price]" value="{{ product_discount.price }}" placeholder="{{ entry_price }}" class="form-control"/></td>
                                        <td><select name="product_discount[{{ discount_row }}][type]" class="form-select">
                                            <option value="F"{% if product_discount.type == 'F' %} selected{% endif %}>{{ text_fixed }}</option>
                                            <option value="S"{% if product_discount.type == 'S' %} selected{% endif %}>{{ text_subtract }}</option>
                                            <option value="P"{% if product_discount.type == 'P' %} selected{% endif %}>{{ text_percentage }}</option>
                                          </select></td>
                                        <td><div class="form-check form-switch form-switch-lg">
                                            <input type="hidden" name="product_discount[{{ discount_row }}][special]" value="0"/>
                                            <input type="checkbox" name="product_discount[{{ discount_row }}][special]" value="1" class="form-check-input"{% if product_discount.special %} checked{% endif %}/>
                                          </div></td>
                                        <td><input type="date" name="product_discount[{{ discount_row }}][date_start]" value="{{ product_discount.date_start }}" placeholder="{{ entry_date_start }}" class="form-control"/></td>
                                        <td><input type="date" name="product_discount[{{ discount_row }}][date_end]" value="{{ product_discount.date_end }}" placeholder="{{ entry_date_end }}" class="form-control"/></td>
                                        <td class="text-end"><button type="button" onclick="$('#discount-row-{{ discount_row }}').remove();" data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                      </tr>
                                      {% set discount_row = discount_row + 1 %}
                                    {% endfor %}
                                  </tbody>
                                  <tfoot>
                                    <tr>
                                      <td colspan="8"></td>
                                      <td class="text-end"><button type="button" id="button-discount" data-bs-toggle="tooltip" title="{{ button_discount_add }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>
                                    </tr>
                                  </tfoot>
                                </table>
                              </div>
                  </div>
                  <div class="mb-4">
                    <h6 class="fw-semibold mb-3"><i class="fa-solid fa-coins me-2 text-warning"></i>{{ tab_reward }}</h6>
                <fieldset>
                                <legend>{{ text_reward }}</legend>
                                <div class="row mb-3">
                                  <label for="input-points" class="col-sm-2 col-form-label">{{ entry_points }}</label>
                                  <div class="col-sm-10">
                                    <div class="input-group">
                                      <input type="text" name="points" value="{{ points }}" placeholder="{{ entry_points }}" id="input-points" class="form-control"/>
                                      {% if master_id %}
                                        <div class="input-group-text">
                                          <div class="form-check form-switch">
                                            <input type="checkbox" name="override[points]" value="1" id="input-variant-points" data-oc-toggle="switch" data-oc-target="#input-points" class="form-check-input"{% if override.points %} checked{% endif %}/> <label for="input-variant-points" class="form-check-label"></label>
                                          </div>
                                        </div>
                                      {% endif %}
                                    </div>
                                    <div class="form-text">{{ help_points }}</div>
                                  </div>
                                </div>
                              </fieldset>
                              <fieldset>
                                <legend>{{ text_points }}</legend>
                                <div class="table-responsive">
                                  <table id="product-reward" class="table table-bordered table-hover">
                                    <thead>
                                      <tr>
                                        <th>{{ entry_customer_group }}</th>
                                        <th class="text-end">{{ entry_reward }}&nbsp;&nbsp;{% if master_id %}
                                          <div class="form-check form-switch float-end">
                                            <input type="checkbox" name="override[product_reward]" value="1" id="input-variant-product-reward" data-oc-toggle="switch" data-oc-target="#product-reward" class="form-check-input"{% if override.product_reward %} checked{% endif %}/> <label for="input-variant-product-reward" class="form-check-label"></label>
                                          </div>
                                          {% endif %}</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                      {% for customer_group in customer_groups %}
                                        <tr>
                                          <td>{{ customer_group.name }}</td>
                                          <td class="text-end"><input type="text" name="product_reward[{{ customer_group.customer_group_id }}][points]" value="{{ product_reward[customer_group.customer_group_id] ? product_reward[customer_group.customer_group_id].points }}" class="form-control"/></td>
                                        </tr>
                                      {% endfor %}
                                    </tbody>
                                  </table>
                                </div>
                              </fieldset>
                  </div>
                  <div>
                    <h6 class="fw-semibold mb-3"><i class="fa-solid fa-repeat me-2 text-success"></i>{{ tab_subscription }}</h6>
                <div class="table-responsive">
                                <table id="product-subscription" class="table table-bordered table-hover">
                                  <thead>
                                    <tr>
                                      <th>{{ entry_subscription }}</th>
                                      <th>{{ entry_customer_group }}</th>
                                      <th>{{ entry_trial_price }}</th>
                                      <th>{{ entry_price }}</th>
                                      <th>
                                        {% if master_id %}
                                          <div class="form-check form-switch float-end">
                                            <input type="checkbox" name="override[product_subscription]" value="1" id="input-variant-product-subscription" data-oc-toggle="switch" data-oc-target="#product-subscription" class="form-check-input"{% if override.product_subscription %} checked{% endif %}/> <label for="input-variant-product-subscription" class="form-check-label"></label>
                                          </div>
                                        {% endif %}</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    {% set subscription_row = 0 %}
                                    {% for product_subscription in product_subscriptions %}
                                      <tr id="subscription-row-{{ subscription_row }}">
                                        <td><select name="product_subscription[{{ subscription_row }}][subscription_plan_id]" class="form-select">
                                            {% for subscription_plan in subscription_plans %}
                                              <option value="{{ subscription_plan.subscription_plan_id }}"{% if subscription_plan.subscription_plan_id == product_subscription.subscription_plan_id %} selected{% endif %}>{{ subscription_plan.name }}</option>
                                            {% endfor %}
                                          </select></td>
                                        <td><select name="product_subscription[{{ subscription_row }}][customer_group_id]" class="form-select">
                                            {% for customer_group in customer_groups %}
                                              <option value="{{ customer_group.customer_group_id }}"{% if customer_group.customer_group_id == product_subscription.customer_group_id %} selected{% endif %}>{{ customer_group.name }}</option>
                                            {% endfor %}
                                          </select></td>
                                        <td><input type="text" name="product_subscription[{{ subscription_row }}][trial_price]" value="{{ product_subscription.trial_price }}" placeholder="{{ entry_trial_price }}" class="form-control"/></td>
                                        <td><input type="text" name="product_subscription[{{ subscription_row }}][price]" value="{{ product_subscription.price }}" placeholder="{{ entry_price }}" class="form-control"/></td>
                                        <td class="text-end"><button type="button" onclick="$('#subscription-row-{{ subscription_row }}').remove()" data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                      </tr>
                                      {% set subscription_row = subscription_row + 1 %}
                                    {% endfor %}
                                  </tbody>
                                  <tfoot>
                                    <tr>
                                      <td colspan="4"></td>
                                      <td class="text-end"><button type="button" id="button-subscription" data-bs-toggle="tooltip" title="{{ button_subscription_add }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>
                                    </tr>
                                  </tfoot>
                                </table>
                              </div>
                  </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-links">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_links }}</h5>
                </div>
                <div class="card-body">
            <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_manufacturer }}</label>
                            <div class="col-sm-10">
                              <div class="input-group">
                                <input type="text" name="manufacturer" value="{{ manufacturer }}" placeholder="{{ entry_manufacturer }}" id="input-manufacturer" data-oc-target="autocomplete-manufacturer" class="form-control" autocomplete="off"/>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[manufacturer]" value="1" id="input-variant-manufacturer" data-oc-toggle="switch" data-oc-target="#input-manufacturer" class="form-check-input"{% if override.manufacturer %} checked{% endif %}/> <label for="input-variant-manufacturer" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                              <input type="hidden" name="manufacturer_id" value="{{ manufacturer_id }}" id="input-manufacturer-id"/>
                              <ul id="autocomplete-manufacturer" class="dropdown-menu"></ul>
                              <div class="form-text">{{ help_manufacturer }}</div>
                            </div>
                          </div>
                          <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_category }}</label>
                            <div class="col-sm-10">
                              <input type="text" name="category" value="" placeholder="{{ entry_category }}" id="input-category" data-oc-target="autocomplete-category" class="form-control" autocomplete="off"/>
                              <ul id="autocomplete-category" class="dropdown-menu"></ul>
                              <div class="input-group">
                                <div class="form-control p-0" style="height: 150px; overflow: auto;">
                                  <table id="product-category" class="table m-0">
                                    <tbody>
                                      {% for product_category in product_categories %}
                                        <tr id="product-category-{{ product_category.category_id }}">
                                          <td>{{ product_category.name }}<input type="hidden" name="product_category[]" value="{{ product_category.category_id }}"/></td>
                                          <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                        </tr>
                                      {% endfor %}
                                    </tbody>
                                  </table>
                                </div>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[product_category]" value="1" id="input-variant-category" data-oc-toggle="switch" data-oc-target="#input-category, #product-category" class="form-check-input"{% if override.product_category %} checked{% endif %}/> <label for="input-variant-category" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                              <div class="form-text">{{ help_category }}</div>
                            </div>
                          </div>
                          <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_filter }}</label>
                            <div class="col-sm-10">
                              <input type="text" name="filter" value="" placeholder="{{ entry_filter }}" id="input-filter" data-oc-target="autocomplete-filter" class="form-control" autocomplete="off"/>
                              <ul id="autocomplete-filter" class="dropdown-menu"></ul>
                              <div class="input-group">
                                <div class="form-control p-0" style="height: 150px; overflow: auto;">
                                  <table id="product-filter" class="table m-0">
                                    <tbody>
                                      {% for product_filter in product_filters %}
                                        <tr id="product-filter-{{ product_filter.filter_id }}">
                                          <td>{{ product_filter.name }}<input type="hidden" name="product_filter[]" value="{{ product_filter.filter_id }}"/></td>
                                          <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                        </tr>
                                      {% endfor %}
                                    </tbody>
                                  </table>
                                </div>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[product_filter]" value="1" id="input-variant-filter" data-oc-toggle="switch" data-oc-target="#input-filter, #product-filter" class="form-check-input"{% if override.product_filter %} checked{% endif %}/> <label for="input-variant-filter" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                              <div class="form-text">{{ help_filter }}</div>
                            </div>
                          </div>
                          <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_store }}</label>
                            <div class="col-sm-10">
                              <div class="input-group">
                                <div id="product-store" class="form-control" style="height: 150px; overflow: auto;">
                                  {% for store in stores %}
                                    <div class="form-check">
                                      <input type="checkbox" name="product_store[]" value="{{ store.store_id }}" id="input-store-{{ store.store_id }}" class="form-check-input"{% if store.store_id in product_store %} checked{% endif %}/> <label for="input-store-{{ store.store_id }}" class="form-check-label">{{ store.name }}</label>
                                    </div>
                                  {% endfor %}
                                </div>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[product_store]" value="1" id="input-variant-store" data-oc-toggle="switch" data-oc-target="#product-store" class="form-check-input"{% if override.product_store %} checked{% endif %}/> <label for="input-variant-store" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                            </div>
                          </div>
                          <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_download }}</label>
                            <div class="col-sm-10">
                              <input type="text" name="download" value="" placeholder="{{ entry_download }}" id="input-download" data-oc-target="autocomplete-download" class="form-control" autocomplete="off"/>
                              <ul id="autocomplete-download" class="dropdown-menu"></ul>
                              <div class="input-group">
                                <div class="form-control p-0" style="height: 150px; overflow: auto;">
                                  <table id="product-download" class="table m-0">
                                    <tbody>
                                      {% for product_download in product_downloads %}
                                        <tr id="product-download-{{ product_download.download_id }}">
                                          <td>{{ product_download.name }}<input type="hidden" name="product_download[]" value="{{ product_download.download_id }}"/></td>
                                          <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                        </tr>
                                      {% endfor %}
                                    </tbody>
                                  </table>
                                </div>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[product_download]" value="1" id="input-variant-download" data-oc-toggle="switch" data-oc-target="#input-download, #product-download" class="form-check-input"{% if override.product_download %} checked{% endif %}/> <label for="input-variant-download" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                              <div class="form-text">{{ help_download }}</div>
                            </div>
                          </div>
                          <div class="row mb-3">
                            <label class="col-sm-2 col-form-label">{{ entry_related }}</label>
                            <div class="col-sm-10">
                              <input type="text" name="related" value="" placeholder="{{ entry_related }}" id="input-related" data-oc-target="autocomplete-related" class="form-control" autocomplete="off"/>
                              <ul id="autocomplete-related" class="dropdown-menu"></ul>
                              <div class="input-group">
                                <div class="form-control p-0" style="height: 150px; overflow: auto;">
                                  <table id="product-related" class="table m-0">
                                    <tbody>
                                      {% for product_related in product_relateds %}
                                        <tr id="product-related-{{ product_related.product_id }}">
                                          <td>{{ product_related.name }}<input type="hidden" name="product_related[]" value="{{ product_related.product_id }}"/></td>
                                          <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                        </tr>
                                      {% endfor %}
                                    </tbody>
                                  </table>
                                </div>
                                {% if master_id %}
                                  <div class="input-group-text">
                                    <div class="form-check form-switch">
                                      <input type="checkbox" name="override[product_related]" value="1" id="input-variant-related" data-oc-toggle="switch" data-oc-target="#input-related, #product-related" class="form-check-input"{% if override.product_related %} checked{% endif %}/> <label for="input-variant-related" class="form-check-label"></label>
                                    </div>
                                  </div>
                                {% endif %}
                              </div>
                              <div class="form-text">{{ help_related }}</div>
                            </div>
                          </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-attribute">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_attribute }}</h5>
                </div>
                <div class="card-body">
            <div class="table-responsive">
                            <table id="product-attribute" class="table table-bordered table-hover">
                              <thead>
                                <tr>
                                  <th>{{ entry_attribute }}</th>
                                  <th>{{ entry_text }}</th>
                                  <th>{% if master_id %}
                                      <div class="form-check form-switch float-end">
                                        <input type="checkbox" name="override[product_attribute]" value="1" id="input-variant-product-attribute" data-oc-toggle="switch" data-oc-target="#product-attribute" class="form-check-input"{% if override.product_attribute %} checked{% endif %}/> <label for="input-variant-product-attribute" class="form-check-label"></label>
                                      </div>
                                    {% endif %}</th>
                                </tr>
                              </thead>
                              <tbody>
                                {% set attribute_row = 0 %}
                                {% for product_attribute in product_attributes %}
                                  <tr id="attribute-row-{{ attribute_row }}">
                                    <td>
                                      <input type="hidden" name="product_attribute[{{ attribute_row }}][attribute_id]" value="{{ product_attribute.attribute_id }}" id="input-attribute-id-{{ attribute_row }}"/> <input type="text" name="product_attribute[{{ attribute_row }}][name]" value="{{ product_attribute.name }}" placeholder="{{ entry_attribute }}" id="input-attribute-{{ attribute_row }}" data-oc-target="autocomplete-attribute-{{ attribute_row }}" class="form-control" autocomplete="new-password"/>
                                      <ul id="autocomplete-attribute-{{ attribute_row }}" class="dropdown-menu"></ul>
                                    </td>

                                    <td>{% for language in languages %}
                                        <div class="input-group mb-12">
                                          <div class="input-group-text"><img src="{{ language.image }}" title="{{ language.name }}"/></div>
                                          <textarea name="product_attribute[{{ attribute_row }}][product_attribute_description][{{ language.language_id }}][text]" rows="5" placeholder="{{ entry_text }}" id="input-text-{{ attribute_row }}-{{ language.language_id }}" class="form-control">{{ product_attribute.product_attribute_description[language.language_id] ? product_attribute.product_attribute_description[language.language_id].text }}</textarea>
                                        </div>
                                      {% endfor %}</td>
                                    <td class="text-end"><button type="button" onclick="$('#attribute-row-{{ attribute_row }}').remove();" data-bs-toggle="tooltip" title="{{ button_remove }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>
                                  </tr>
                                  {% set attribute_row = attribute_row + 1 %}
                                {% endfor %}
                              </tbody>
                              <tfoot>
                                <tr>
                                  <td colspan="2"></td>
                                  <td class="text-end"><button type="button" id="button-attribute" data-bs-toggle="tooltip" title="{{ button_attribute_add }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>
                                </tr>
                              </tfoot>
                            </table>
                          </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-seo">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_seo }}</h5>
                </div>
                <div class="card-body">
            <div class="alert alert-info"><i class="fa-solid fa-info-circle"></i> {{ text_keyword }}</div>
                          <div id="product-seo" class="table-responsive">
                            <table class="table table-bordered table-hover">
                              <thead>
                                <tr>
                                  <th>{{ entry_store }}</th>
                                  <th>{{ entry_keyword }}</th>
                                </tr>
                              </thead>
                              <tbody>
                                {% for store in stores %}
                                  <tr>
                                    <td>{{ store.name }}</td>
                                    <td>
                                      {% for language in languages %}
                                        <div class="input-group">
                                          <div class="input-group-text"><img src="{{ language.image }}" title="{{ language.name }}"/></div>
                                          <input type="text" name="product_seo_url[{{ store.store_id }}][{{ language.language_id }}]" value="{% if product_seo_url[store.store_id][language.language_id] %}{{ product_seo_url[store.store_id][language.language_id] }}{% endif %}" id="input-keyword-{{ store.store_id }}-{{ language.language_id }}" placeholder="{{ entry_keyword }}" class="form-control"/>
                                        </div>
                                        <div id="error-keyword-{{ store.store_id }}-{{ language.language_id }}" class="invalid-feedback"></div>
                                      {% endfor %}</td>
                                  </tr>
                                {% endfor %}
                              </tbody>
                            </table>
                          </div>
                </div>
              </div>
              <div class="card shadow-sm mb-4" id="section-design">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_design }}</h5>
                </div>
                <div class="card-body">
            <div class="table-responsive">
                            <table id="product-layout" class="table table-bordered table-hover">
                              <thead>
                                <tr>
                                  <th>{{ entry_store }}</th>
                                  <th>{{ entry_layout }}{% if master_id %}
                                      <div class="form-check form-switch float-end">
                                        <input type="checkbox" name="override[product_layout]" value="1" id="input-variant-product-layout" data-oc-toggle="switch" data-oc-target="#product-layout" class="form-check-input"{% if override.product_layout %} checked{% endif %}/> <label for="input-variant-product-layout" class="form-check-label"></label>
                                      </div>
                                    {% endif %}</th>
                                </tr>
                              </thead>
                              <tbody>
                                {% for store in stores %}
                                  <tr>
                                    <td>{{ store.name }}</td>
                                    <td><select name="product_layout[{{ store.store_id }}]" class="form-select">
                                        <option value=""></option>
                                        {% for layout in layouts %}
                                          <option value="{{ layout.layout_id }}"{% if product_layout[store.store_id] and product_layout[store.store_id] == layout.layout_id %} selected{% endif %}>{{ layout.name }}</option>
                                        {% endfor %}
                                      </select></td>
                                  </tr>
                                {% endfor %}
                              </tbody>
                            </table>
                          </div>
                </div>
              </div>
              <div class="card shadow-sm" id="section-report">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">{{ tab_report }}</h5>
                </div>
                <div class="card-body">
            <fieldset>
                            <legend>{{ text_report }}</legend>
                            <div id="report">{{ report }}</div>
                          </fieldset>
                </div>
              </div>
            </div>
          </div>
          <input type="hidden" name="product_id" value="{{ product_id }}" id="input-product-id"/>
        </form>
      </div>
    </div>
  </div>
<script>
document.addEventListener('DOMContentLoaded', function () {
  var navLinks = document.querySelectorAll('.section-nav a[data-target]');

  navLinks.forEach(function (link) {
    link.addEventListener('click', function (event) {
      event.preventDefault();

      var targetId = this.getAttribute('data-target');

      if (!targetId) {
        return;
      }

      var target = document.getElementById(targetId);

      if (target) {
        target.scrollIntoView({ behavior: 'smooth', block: 'start' });

        var focusable = target.querySelector('input, select, textarea');

        if (focusable && typeof focusable.focus === 'function') {
          focusable.focus({ preventScroll: true });
        }
      }
    });
  });

  var priceInput = document.getElementById('input-price');
  var priceSwitch = document.getElementById('input-variant-price');

  if (priceInput) {
    priceInput.addEventListener('blur', function () {
      var value = priceInput.value.trim();
      var normalised = value.replace(/,/g, '');

      if (normalised !== '' && !isNaN(normalised)) {
        priceInput.value = parseFloat(normalised).toFixed(4);
      }
    });
  }

  if (priceInput && priceSwitch) {
    var ensurePriceOverride = function () {
      if (!priceSwitch.checked) {
        priceSwitch.checked = true;
        priceSwitch.dispatchEvent(new Event('change'));
      }
    };

    priceInput.addEventListener('input', ensurePriceOverride);
    priceInput.addEventListener('change', ensurePriceOverride);
  }

  var taxSelect = document.getElementById('input-tax-class');
  var taxSwitch = document.getElementById('input-variant-tax-class');

  if (taxSelect && taxSwitch) {
    taxSelect.addEventListener('change', function () {
      if (!taxSwitch.checked) {
        taxSwitch.checked = true;
        taxSwitch.dispatchEvent(new Event('change'));
      }
    });
  }
});
</script>

<script type="text/javascript"><!--
$('textarea[data-oc-toggle=\'ckeditor\']').ckeditor({
    language: '{{ ckeditor }}'
});

var code_row = {{ code_row }};
const AUTOCOMPLETE_LIMIT = {{ autocomplete_limit }};

$('#button-code').on('click', function() {
    var html = '';

    let code = $('#input-code').val();
    let value = $('#input-value').val();

    html += '<tr id="code-row-' + code_row + '">';
    html += '  <td style="width: 1px;">' + code + '<input type="hidden" name="product_code[' + code_row + '][code]" value="' + code + '"/></td>';
    html += '  <td>' + value + '<div id="error-code-' + code_row + '" class="invalid-feedback"></div><input type="hidden" name="product_code[' + code_row + '][value]" value="' + value + '"/></td>';
    html += '  <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';

    $('#product-code').append(html);

    code_row++;
});

$('#product-code').on('click', '.btn', function() {
    $(this).parent().parent().remove();
});

// Manufacturer
$('#input-manufacturer').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/manufacturer.autocomplete&user_token={{ user_token }}&limit=' + AUTOCOMPLETE_LIMIT + '&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                json.unshift({
                    manufacturer_id: 0,
                    name: '{{ text_none }}'
                });

                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['manufacturer_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-manufacturer').val(decodeHTMLEntities(item['label']));
        $('#input-manufacturer-id').val(item['value']);
    }
});

// Category
$('#input-category').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/category.autocomplete&user_token={{ user_token }}&limit=' + AUTOCOMPLETE_LIMIT + '&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    const fullPath = item['path'] ? item['path'] + ' &gt; ' + item['label'] : item['label'];

                    return {
                        label: fullPath,
                        value: item['category_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-category').val('');

        $('#product-category-' + item['value']).remove();

        html = '<tr id="product-category-' + item['value'] + '">';
        html += '  <td>' + item['label'].replace(/&gt;/g, '>') + '<input type="hidden" name="product_category[]" value="' + item['value'] + '"/></td>';
        html += '  <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
        html += '</tr>';

        $('#product-category tbody').append(html);
    }
});

$('#product-category').on('click', '.btn', function() {
    $(this).parent().parent().remove();
});

// Filter
$('#input-filter').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/filter.autocomplete&user_token={{ user_token }}&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['filter_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-filter').val('');

        $('#product-filter-' + item['value']).remove();

        html = '<tr id="product-filter-' + item['value'] + '">';
        html += '  <td>' + item['label'] + '<input type="hidden" name="product_filter[]" value="' + item['value'] + '"/></td>';
        html += '  <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
        html += '</tr>';

        $('#product-filter tbody').append(html);
    }
});

$('#product-filter').on('click', '.btn', function() {
    $(this).parent().parent().remove();
});

// Downloads
$('#input-download').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/download.autocomplete&user_token={{ user_token }}&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['download_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-download').val('');

        $('#product-download-' + item['value']).remove();

        html = '<tr id="product-download-' + item['value'] + '">';
        html += '  <td>' + item['label'] + '<input type="hidden" name="product_download[]" value="' + item['value'] + '"/></td>';
        html += '  <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
        html += '</tr>';

        $('#product-download tbody').append(html);
    }
});

$('#product-download').on('click', '.btn', function() {
    $(this).parent().parent().remove();
});

// Related
$('#input-related').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/product.autocomplete&user_token={{ user_token }}&limit=' + AUTOCOMPLETE_LIMIT + '&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['product_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-related').val('');

        $('#product-related-' + item['value']).remove();

        html = '<tr id="product-related-' + item['value'] + '">';
        html += '  <td>' + item['label'] + '<input type="hidden" name="product_related[]" value="' + item['value'] + '"/></td>';
        html += '  <td class="text-end"><button type="button" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
        html += '</tr>';

        $('#product-related tbody').append(html);
    }
});

$('#product-related').on('click', '.btn', function() {
    $(this).parent().parent().remove();
});

var attributeautocomplete = function(attribute_row) {
    $('#input-attribute-' + attribute_row).autocomplete({
        'source': function(request, response) {
            $.ajax({
                url: 'index.php?route=catalog/attribute.autocomplete&user_token={{ user_token }}&filter_name=' + encodeURIComponent(request),
                dataType: 'json',
                success: function(json) {
                    response($.map(json, function(item) {
                        return {
                            category: item.attribute_group,
                            label: item.name,
                            value: item.attribute_id
                        }
                    }));
                }
            });
        },
        'select': function(item) {
            $('#input-attribute-' + attribute_row).val(decodeHTMLEntities(item['label']));
            $('#input-attribute-id-' + attribute_row).val(item['value']);
        }
    });
}

var attribute_row = {{ attribute_row }};

$('#product-attribute tr').each(function(index) {
    attributeautocomplete(index);
});

$('#button-attribute').on('click', function() {
    html = '<tr id="attribute-row-' + attribute_row + '">';
    html += '  <td>';
    html += '    <input type="text" name="product_attribute[' + attribute_row + '][name]" value="" placeholder="{{ entry_attribute|escape('js') }}" id="input-attribute-' + attribute_row + '" data-oc-target="autocomplete-attribute-' + attribute_row + '" class="form-control" autocomplete="off"/>';
    html += '    <input type="hidden" name="product_attribute[' + attribute_row + '][attribute_id]" value="" id="input-attribute-id-' + attribute_row + '"/>';
    html += '    <ul id="autocomplete-attribute-' + attribute_row + '" class="dropdown-menu"></ul>';
    html += '  </td>';
    html += '  <td>';
  {% for language in languages %}
    html += '<div class="input-group">';
    html += '  <div class="input-group-text"><img src="{{ language.image }}" title="{{ language.name|escape('js') }}" /></div>';
    html += '  <textarea name="product_attribute[' + attribute_row + '][product_attribute_description][{{ language.language_id }}][text]" rows="5" placeholder="{{ entry_text|escape('js') }}" id="input-text-' + attribute_row + '-{{ language.language_id }}" class="form-control"></textarea>';
    html += '</div>';
  {% endfor %}
    html += '  </td>';
    html += '  <td class="text-end"><button type="button" onclick="$(\'#attribute-row-' + attribute_row + '\').remove();" data-bs-toggle="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';

    $('#product-attribute').append(html);

    attributeautocomplete(attribute_row);

    attribute_row++;
});

{% if not master_id %}
var option_row = {{ option_row }};

$('#input-option').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=catalog/option.autocomplete&user_token={{ user_token }}&filter_name=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        category: item['category'],
                        label: item['name'],
                        value: item['option_id'],
                        type: item['type'],
                        option_value: item['option_value']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        html = '<fieldset id="option-row-' + option_row + '">';
        html += '  <legend class="float-none">' + item['label'] + '</legend>';
        html += '  <input type="hidden" name="product_option[' + option_row + '][product_option_id]" value="" />';
        html += '  <input type="hidden" name="product_option[' + option_row + '][name]" value="' + decodeHTMLEntities(item['label']) + '" />';
        html += '  <input type="hidden" name="product_option[' + option_row + '][option_id]" value="' + item['value'] + '" />';
        html += '  <input type="hidden" name="product_option[' + option_row + '][type]" value="' + item['type'] + '" />';

        html += '  <div class="row align-items-center">';
        html += '    <div class="col-11">';

        html += '      <div class="mb-3">';
        html += '        <label for="input-required-' + option_row + '" class="form-label">{{ entry_required|escape('js') }}</label>';
        html += '	       <select name="product_option[' + option_row + '][required]" id="input-required-' + option_row + '" class="form-select">';
        html += '	         <option value="1">{{ text_yes|escape('js') }}</option>';
        html += '	         <option value="0">{{ text_no|escape('js') }}</option>';
        html += '	       </select>';
        html += '      </div>';

        if (item['type'] == 'text') {
            html += '  <div class="mb-3">';
            html += '     <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '     <input type="text" name="product_option[' + option_row + '][value]" value="" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"/>';
            html += '	 </div>';
        }

        if (item['type'] == 'textarea') {
            html += '  <div class="mb-3">';
            html += '    <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '    <textarea name="product_option[' + option_row + '][value]" rows="5" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"></textarea>';
            html += '	 </div>';
        }

        if (item['type'] == 'file') {
            html += '  <div class="mb-3 d-none">';
            html += '    <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '    <input type="text" name="product_option[' + option_row + '][value]" value="" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"/>';
            html += '  </div>';
        }

        if (item['type'] == 'date') {
            html += '  <div class="mb-3">';
            html += '    <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '    <input type="date" name="product_option[' + option_row + '][value]" value="" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"/>';
            html += '  </div>';
        }

        if (item['type'] == 'time') {
            html += '  <div class="mb-3">';
            html += '    <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '    <input type="time" name="product_option[' + option_row + '][value]" value="" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"/>';
            html += '  </div>';
        }

        if (item['type'] == 'datetime') {
            html += '	 <div class="mb-3">';
            html += '    <label for="input-option-' + option_row + '" class="form-label">{{ entry_option_value|escape('js') }}</label>';
            html += '    <input type="datetime-local" name="product_option[' + option_row + '][value]" value="" placeholder="{{ entry_option_value|escape('js') }}" id="input-option-' + option_row + '" class="form-control"/>';
            html += '  </div>';
        }

        if (item['type'] == 'select' || item['type'] == 'radio' || item['type'] == 'checkbox' || item['type'] == 'image') {
            html += '<div class="table-responsive">';
            html += '  <table class="table table-bordered table-hover">';
            html += '  	 <thead>';
            html += '      <tr>';
            html += '        <td>{{ entry_option_value|escape('js') }}</td>';
            html += '        <td class="text-end">{{ entry_quantity|escape('js') }}</td>';
            html += '        <td>{{ entry_subtract|escape('js') }}</td>';
            html += '        <td class="text-end">{{ entry_price|escape('js') }}</td>';
            html += '        <td class="text-end">{{ entry_points|escape('js') }}</td>';
            html += '        <td class="text-end">{{ entry_weight|escape('js') }}</td>';
            html += '        <td></td>';
            html += '      </tr>';
            html += '    </thead>';
            html += '    <tbody id="option-value-' + option_row + '"></tbody>';
            html += '    <tfoot>';
            html += '      <tr>';
            html += '        <td colspan="6"></td>';
            html += '        <td class="text-end"><button type="button" data-option-row="' + option_row + '" data-bs-toggle="tooltip" title="{{ button_option_value_add|escape('js') }}" class="btn btn-primary"><i class="fa-solid fa-plus-circle"></i></button></td>';
            html += '      </tr>';
            html += '    </tfoot>';
            html += '  </table>';
            html += '</div>';

            html += '<select id="product-option-values-' + option_row + '" class="d-none">';

            for (i = 0; i < item['option_value'].length; i++) {
                html += '<option value="' + item['option_value'][i]['option_value_id'] + '">' + item['option_value'][i]['name'] + '</option>';
            }

            html += '</select>';
        }

        html += '	 </div>';
        html += '	 <div class="col">';
        html += '    <button type="button" class="btn btn-danger" onclick="$(\'#option-row-' + option_row + '\').remove();"><i class="fa-solid fa-minus-circle"></i></button>';
        html += '  </div>';
        html += '</fieldset>';

        $('#option').append(html);

        option_row++;
    }
});

var option_value_row = {{ option_value_row }};

$('#option').on('click', '.btn-primary', function() {
    var element = this;

    if ($(element).attr('data-option-value-row')) {
        element.option_value_row = $(element).attr('data-option-value-row');
    } else {
        element.option_value_row = option_value_row;
    }

    $('.modal').remove();

    html = '<div id="modal-option" class="modal fade">';
    html += '  <div class="modal-dialog">';
    html += '    <div class="modal-content">';
    html += '      <div class="modal-header">';
    html += '        <h5 class="modal-title"><i class="fa-solid fa-pencil"></i> {{ text_option_value|escape('js') }}</h5> <button type="button" class="btn-close" data-bs-dismiss="modal"></button>';
    html += '      </div>';
    html += '      <div class="modal-body">';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-option-value" class="form-label">{{ entry_option_value|escape('js') }}</label>';
    html += '      	   <select name="option_value_id" id="input-modal-option-value" class="form-select">';

    option_value = $('#product-option-values-' + $(element).attr('data-option-row') + ' option');

    for (i = 0; i < option_value.length; i++) {
        if ($(element).attr('data-option-value-row') && $(option_value[i]).val() == $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][option_value_id]\']').val()) {
            html += '<option value="' + $(option_value[i]).val() + '" selected>' + $(option_value[i]).text() + '</option>';
        } else {
            html += '<option value="' + $(option_value[i]).val() + '">' + $(option_value[i]).text() + '</option>';
        }
    }

    html += '      	   </select>';
    html += '          <input type="hidden" name="product_option_value_id" value="' + ($(element).attr('data-option-value-row') ? $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][product_option_value_id]\']').val() : '') + '"/>';
    html += '        </div>';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-quantity" class="form-label">{{ entry_quantity|escape('js') }}</label>';
    html += '      	   <input type="text" name="quantity" value="' + ($(element).attr('data-option-value-row') ? $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][quantity]\']').val() : '1') + '" placeholder="{{ entry_quantity|escape('js') }}" id="input-modal-quantity" class="form-control"/>';
    html += '        </div>';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-subtract" class="form-label">{{ entry_subtract|escape('js') }}</label>';
    html += '      	   <select name="subtract" id="input-modal-subtract" class="form-select">';

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][subtract]\']').val() == '1') {
        html += '        <option value="1" selected>{{ text_yes|escape('js') }}</option>';
        html += '      	 <option value="0">{{ text_no|escape('js') }}</option>';
    } else {
        html += '      	 <option value="1">{{ text_yes|escape('js') }}</option>';
        html += '      	 <option value="0" selected>{{ text_no|escape('js') }}</option>';
    }

    html += '      	   </select>';
    html += '        </div>';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-price" class="form-label">{{ entry_price|escape('js') }}</label>';
    html += '          <div class="input-group">';
    html += '            <select name="price_prefix" class="form-select">';

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][price_prefix]\']').val() == '+') {
        html += '      	   <option value="+" selected>+</option>';
    } else {
        html += '      	   <option value="+">+</option>';
    }

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][price_prefix]\']').val() == '-') {
        html += '      	       <option value="-" selected>-</option>';
    } else {
        html += '      	       <option value="-">-</option>';
    }

    html += '      	     </select>';
    html += '      	     <input type="text" name="price" value="' + ($(element).attr('data-option-value-row') ? $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][price]\']').val() : '0') + '" placeholder="{{ entry_price|escape('js') }}" id="input-modal-price" class="form-control"/>';
    html += '          </div>';
    html += '        </div>';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-points" class="form-label">{{ entry_points|escape('js') }}</label>';
    html += '          <div class="input-group">';
    html += '      	     <select name="points_prefix" class="form-select">';

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][points_prefix]\']').val() == '+') {
        html += '      	       <option value="+" selected>+</option>';
    } else {
        html += '      	       <option value="+">+</option>';
    }

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][points_prefix]\']').val() == '-') {
        html += '      	       <option value="-" selected>-</option>';
    } else {
        html += '      	       <option value="-">-</option>';
    }

    html += '      	     </select>';
    html += '      	     <input type="text" name="points" value="' + ($(element).attr('data-option-value-row') ? $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][points]\']').val() : '0') + '" placeholder="{{ entry_points|escape('js') }}" id="input-modal-points" class="form-control"/>';
    html += '          </div>';
    html += '        </div>';
    html += '        <div class="mb-3">';
    html += '      	   <label for="input-modal-weight" class="form-label">{{ entry_weight|escape('js') }}</label>';
    html += '          <div class="input-group">';
    html += '      	     <select name="weight_prefix" class="form-select">';

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][weight_prefix]\']').val() == '+') {
        html += '      	       <option value="+" selected>+</option>';
    } else {
        html += '      	       <option value="+">+</option>';
    }

    if ($(element).attr('data-option-value-row') && $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][weight_prefix]\']').val() == '-') {
        html += '      	       <option value="-" selected>-</option>';
    } else {
        html += '      	       <option value="-">-</option>';
    }

    html += '      	     </select>';
    html += '      	     <input type="text" name="weight" value="' + ($(element).attr('data-option-value-row') ? $('input[name=\'product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][weight]\']').val() : '0') + '" placeholder="{{ entry_weight|escape('js') }}" id="input-modal-weight" class="form-control"/>';
    html += '          </div>';
    html += '        </div>';
    html += '      </div>';
    html += '      <div class="modal-footer">';
    html += '	       <button type="button" id="button-save" data-option-row="' + $(element).attr('data-option-row') + '" data-option-value-row="' + element.option_value_row + '" class="btn btn-primary">{{ button_save|escape('js') }}</button> <button type="button" class="btn btn-light" data-bs-dismiss="modal">{{ button_cancel|escape('js') }}</button>';
    html += '      </div>';
    html += '    </div>';
    html += '  </div>';
    html += '</div>';

    $('body').append(html);

    $('#modal-option').modal('show');

    $('#modal-option #button-save').on('click', function() {
        html = '<tr id="option-value-row-' + element.option_value_row + '">';
        html += '  <td>' + $('#modal-option select[name=\'option_value_id\'] option:selected').text() + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][option_value_id]" value="' + $('#modal-option select[name=\'option_value_id\']').val() + '"/><input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][product_option_value_id]" value="' + $('#modal-option input[name=\'product_option_value_id\']').val() + '"/></td>';
        html += '  <td class="text-end">' + $('#modal-option input[name=\'quantity\']').val() + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][quantity]" value="' + $('#modal-option input[name=\'quantity\']').val() + '"/></td>';
        html += '  <td>' + ($('#modal-option select[name=\'subtract\'] option:selected').val() == '1' ? '{{ text_yes|escape('js') }}' : '{{ text_no|escape('js') }}') + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][subtract]" value="' + $('#modal-option select[name=\'subtract\'] option:selected').val() + '"/></td>';
        html += '  <td class="text-end">' + $('#modal-option select[name=\'price_prefix\'] option:selected').val() + $('#modal-option input[name=\'price\']').val() + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][price_prefix]" value="' + $('#modal-option select[name=\'price_prefix\'] option:selected').val() + '"/><input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][price]" value="' + $('#modal-option input[name=\'price\']').val() + '"/></td>';
        html += '  <td class="text-end"> ' + $('#modal-option select[name=\'points_prefix\'] option:selected').val() + $('#modal-option input[name=\'points\']').val() + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][points_prefix]" value="' + $('#modal-option select[name=\'points_prefix\'] option:selected').val() + '"/><input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][points]" value="' + $('#modal-option input[name=\'points\']').val() + '"/></td>';
        html += '  <td class="text-end">' + $('#modal-option select[name=\'weight_prefix\'] option:selected').val() + $('#modal-option input[name=\'weight\']').val() + '<input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][weight_prefix]" value="' + $('#modal-option select[name=\'weight_prefix\'] option:selected').val() + '"/><input type="hidden" name="product_option[' + $(element).attr('data-option-row') + '][product_option_value][' + element.option_value_row + '][weight]" value="' + $('#modal-option input[name=\'weight\']').val() + '"/></td>';
        html += '  <td class="text-end"><button type="button" data-bs-toggle="tooltip" title="{{ button_edit|escape('js') }}" data-option-row="' + $(element).attr('data-option-row') + '" data-option-value-row="' + element.option_value_row + '"class="btn btn-primary"><i class="fa-solid fa-pencil"></i></button> <button type="button" onclick="$(\'#option-value-row-' + element.option_value_row + '\').remove();" data-bs-toggle="tooltip" rel="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
        html += '</tr>';

        if ($(element).attr('data-option-value-row')) {
            $('#option-value-row-' + element.option_value_row).replaceWith(html);
        } else {
            $('#option-value-' + $(element).attr('data-option-row')).append(html);

            option_value_row++;
        }

        $('#modal-option').modal('hide');
    });
});
{% endif %}

var discount_row = {{ discount_row }};

$('#button-discount').on('click', function() {
    html = '<tr id="discount-row-' + discount_row + '">';
    html += '  <td><select name="product_discount[' + discount_row + '][customer_group_id]" class="form-select">';
  {% for customer_group in customer_groups %}
    html += '    <option value="{{ customer_group.customer_group_id }}">{{ customer_group.name|escape('js') }}</option>';
  {% endfor %}
    html += '  </select><input type="hidden" name="product_discount[' + discount_row + '][product_discount_id]" value=""/></td>';
    html += '  <td class="text-end"><input type="text" name="product_discount[' + discount_row + '][quantity]" value="1" placeholder="{{ entry_quantity|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><input type="text" name="product_discount[' + discount_row + '][priority]" value="" placeholder="{{ entry_priority|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><input type="text" name="product_discount[' + discount_row + '][price]" value="" placeholder="{{ entry_price|escape('js') }}" class="form-control"/></td>';
    html += '  <td><select name="product_discount[' + discount_row + '][type]" class="form-select">';
    html += '    <option value="F">{{ text_fixed }}</option>';
    html += '    <option value="S">{{ text_subtract }}</option>';
    html += '    <option value="P">{{ text_percentage }}</option>';
    html += '  </select></td>';
    html += '  <td><div class="form-check form-switch form-switch-lg">';
    html += '    <input type="hidden" name="product_discount[' + discount_row + '][special]" value="0"/>';
    html += '    <input type="checkbox" name="product_discount[' + discount_row + '][special]" value="1" class="form-check-input"/>';
    html += '  </div></td>';
    html += '  <td><input type="date" name="product_discount[' + discount_row + '][date_start]" value="" placeholder="{{ entry_date_start|escape('js') }}" class="form-control"/></td>';
    html += '  <td><input type="date" name="product_discount[' + discount_row + '][date_end]" value="" placeholder="{{ entry_date_end|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><button type="button" onclick="$(\'#discount-row-' + discount_row + '\').remove();" data-bs-toggle="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';

    $('#product-discount tbody').append(html);

    discount_row++;
});

var image_row = {{ image_row }};

$('#button-image').on('click', function() {
    html = '<tr id="product-image-row-' + image_row + '">';
    html += '  <td><div class="border rounded d-block" style="max-width: 300px;">';
    html += '    <img src="{{ placeholder|escape('js') }}" alt="" title="" id="thumb-image-' + image_row + '" data-oc-placeholder="{{ placeholder|escape('js') }}" class="img-fluid"/> <input type="hidden" name="product_image[' + image_row + '][image]" value="" id="input-product-image-' + image_row + '"/>';
    html += '    <div class="d-grid">';
    html += '      <button type="button" data-oc-toggle="image" data-oc-target="#input-product-image-' + image_row + '" data-oc-thumb="#thumb-image-' + image_row + '" class="btn btn-primary rounded-0"><i class="fa-solid fa-pencil"></i> {{ button_edit|escape('js') }}</button>';
    html += '      <button type="button" data-oc-toggle="clear" data-oc-target="#input-product-image-' + image_row + '" data-oc-thumb="#thumb-image-' + image_row + '" class="btn btn-warning rounded-0"><i class="fa-regular fa-trash-can"></i> {{ button_clear|escape('js') }}</button>';
    html += '    </div>';
    html += '    <div class="mt-2">';
    html += '      <label class="form-label small">或直接输入图片链接：</label>';
    html += '      <div class="input-group input-group-sm">';
    html += '        <input type="text" id="input-image-url-' + image_row + '" class="form-control" placeholder="输入完整URL或相对路径，如: catalog/products/image.jpg"/>';
    html += '        <button type="button" class="btn btn-success btn-apply-image-url" data-row="' + image_row + '"><i class="fa-solid fa-check"></i> 应用</button>';
    html += '      </div>';
    html += '      <small class="text-muted">支持相对路径(catalog/...)或完整URL(https://...)</small>';
    html += '    </div>';
    html += '  </div></td>';
    html += '  <td><input type="text" name="product_image[' + image_row + '][sort_order]" value="0" placeholder="{{ entry_sort_order|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><button type="button" onclick="$(\'#product-image-row-' + image_row + '\').remove();" data-bs-toggle="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';

    $('#product-image tbody').append(html);

    image_row++;
});

var subscription_row = {{ subscription_row }};

$('#button-subscription').on('click', function() {
    html = '<tr id="subscription-row-' + subscription_row + '">';
    html += '  <td><select name="product_subscription[' + subscription_row + '][subscription_plan_id]" class="form-select">';
  {% for subscription_plan in subscription_plans %}
    html += '      <option value="{{ subscription_plan.subscription_plan_id }}">{{ subscription_plan.name|escape('js') }}</option>';
  {% endfor %}
    html += '  </select></td>';
    html += '  <td><select name="product_subscription[' + subscription_row + '][customer_group_id]" class="form-select">';
  {% for customer_group in customer_groups %}
    html += '      <option value="{{ customer_group.customer_group_id }}">{{ customer_group.name|escape('js') }}</option>';
  {% endfor %}
    html += '  <select></td>';
    html += '  <td class="text-end"><input type="text" name="product_subscription[' + subscription_row + '][trial_price]" value="" placeholder="{{ entry_trial_price|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><input type="text" name="product_subscription[' + subscription_row + '][price]" value="" placeholder="{{ entry_price|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><button type="button" onclick="$(\'#subscription-row-' + subscription_row + '\').remove()" data-bs-toggle="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';

    $('#product-subscription tbody').append(html);

    subscription_row++;
});

{% if master_id %}
// Variable products
$('input[data-oc-toggle=\'switch\']').on('change', function(e) {
    var element = this;

    var target = $(this).attr('data-oc-target');

    // First we need to grab the default values
    // Now we need to enable or disable any fields in the targets
    $.merge($(target), $(target).find('input, textarea, select, button')).not('[data-oc-toggle=\'switch\']').each(function(i, elem) {
        // Text Textarea
        if ($(this).is('input[type=\'text\'], textarea')) {
            $(this).prop('readonly', !$(element).prop('checked'));
        }

        // CKEditor readonly
        if ($(this).is('[data-oc-toggle=\'ckeditor\']')) {
            var editor = CKEDITOR.instances[$(this).attr('id')];

            if (editor.editable() == undefined) {
                editor.on('instanceReady', function() {
                    this.setReadOnly(!$(element).prop('checked'));
                });
            } else {
                editor.setReadOnly(!$(element).prop('checked'));
            }
        }

        // Radio Checkbox
        if ($(this).is('input[type=\'radio\'], input[type=\'checkbox\'], div[data-bs-toggle=\'buttons\']')) {
            if (!$(element).prop('checked')) {
                $(this).on('click', function(e) {
                    return false;
                });
            } else {
                $(this).off('click');
            }
        }

        // Select
        if ($(this).is('select')) {
            if (!$(element).prop('checked')) {
                $(this).addClass('.disabled');

                $(this).prop('readonly', true);
            } else {
                $(this).removeClass('disabled');

                $(this).prop('readonly', false);
            }

            $(this).find('option').not(':selected').prop('disabled', !$(element).prop('checked'));
        }

        // Button
        if ($(this).is('button')) {
            if (!$(element).prop('checked')) {
                $(this).prop('disabled', true);
            } else {
                $(this).prop('disabled', false);
            }
        }
    });
});

$('input[data-oc-toggle=\'switch\']').trigger('change');
{% endif %}

$('#report').on('click', '.pagination a', function(e) {
    e.preventDefault();

    $('#report').load(this.href);
});

const optionValueLookup = {{ option_value_lookup|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }};
const specOptionsData = {{ spec_options|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }};
const variantPlaceholder = '{{ variant_placeholder }}';
let variantRows = [];

const variantTableBody = document.getElementById('variant-table-body');
const variantEmptyHint = document.getElementById('variant-empty-hint');
const buttonGenerateVariants = document.getElementById('button-generate-variants');
const buttonClearVariants = document.getElementById('button-clear-variants');

function escapeHtml(value) {
    return (value ?? '').toString()
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/\"/g, '&quot;')
        .replace(/'/g, '&#39;');
}

function buildOptionLabels(optionIds) {
    const labels = [];

    optionIds.forEach((id) => {
        const info = optionValueLookup[id];

        if (info) {
            if (info.option_name) {
                labels.push(info.option_name + ': ' + info.value_name);
            } else {
                labels.push(info.value_name);
            }
        }
    });

    return labels;
}

function variantKey(optionIds) {
    return optionIds.slice().sort((a, b) => a - b).join('-');
}

function renderVariantRow(variant, index) {
    const labels = variant.option_labels && variant.option_labels.length ? variant.option_labels.join(' / ') : 'Custom Combination';
    const optionsHidden = (variant.options || []).map((value, idx) => '<input type="hidden" name="product_variant[' + index + '][options][' + idx + ']" value="' + value + '"/>').join('');
    const imagesHidden = (variant.images || []).map((image, imgIndex) => {
        return '<input type="hidden" name="product_variant[' + index + '][images][' + imgIndex + '][image]" value="' + escapeHtml(image.image || '') + '"/>' +
               '<input type="hidden" name="product_variant[' + index + '][images][' + imgIndex + '][sort_order]" value="' + (image.sort_order || 0) + '"/>';
    }).join('');

    const thumb = variant.thumb || variantPlaceholder;

    return '' +
        '<tr data-variant-index="' + index + '">' +
          '<td class="align-top">' +
            '<div class="fw-semibold">' + labels + '</div>' +
            '<div class="text-muted small">{{ text_variant_id|default("缁勫悎缂栧彿") }}: ' + (index + 1) + '</div>' +
            '<input type="hidden" name="product_variant[' + index + '][variant_id]" value="' + (variant.variant_id || 0) + '"/>' +
            optionsHidden +
            imagesHidden +
          '</td>' +
          '<td><input type="text" name="product_variant[' + index + '][sku]" value="' + escapeHtml(variant.sku || '') + '" class="form-control form-control-sm" data-field="sku"/></td>' +
          '<td><input type="text" name="product_variant[' + index + '][model]" value="' + escapeHtml(variant.model || '') + '" class="form-control form-control-sm" data-field="model"/></td>' +
          '<td><input type="text" name="product_variant[' + index + '][price]" value="' + (variant.price !== undefined ? variant.price : '') + '" class="form-control form-control-sm" data-field="price"/></td>' +
          '<td><input type="number" name="product_variant[' + index + '][quantity]" value="' + (variant.quantity !== undefined ? variant.quantity : 0) + '" min="0" class="form-control form-control-sm" data-field="quantity"/></td>' +
          '<td><input type="text" name="product_variant[' + index + '][weight]" value="' + (variant.weight !== undefined ? variant.weight : '') + '" class="form-control form-control-sm" data-field="weight"/></td>' +
          '<td><div class="form-check form-switch">' +
              '<input type="hidden" name="product_variant[' + index + '][status]" value="0"/>' +
              '<input type="checkbox" name="product_variant[' + index + '][status]" value="1" class="form-check-input" data-field="status"' + (variant.status ? ' checked' : '') + '/>' +
            '</div></td>' +
          '<td><input type="number" name="product_variant[' + index + '][sort_order]" value="' + (variant.sort_order !== undefined ? variant.sort_order : (index + 1)) + '" class="form-control form-control-sm" data-field="sort_order"/></td>' +
          '<td>' +
            '<div class="d-flex align-items-center gap-2">' +
              '<a href="#" id="thumb-variant-image-wrapper-' + index + '" data-oc-toggle="image" data-oc-target="#input-variant-image-' + index + '" data-oc-thumb="#thumb-variant-image-' + index + '" class="img-thumbnail" style="width:64px;">' +
                '<img src="' + escapeHtml(thumb) + '" alt="" class="img-fluid" id="thumb-variant-image-' + index + '"/>' +
              '</a>' +
              '<div class="btn-group btn-group-sm" role="group">' +
                '<button type="button" data-oc-toggle="image" data-oc-target="#input-variant-image-' + index + '" data-oc-thumb="#thumb-variant-image-' + index + '" class="btn btn-outline-primary"><i class="fa-solid fa-image"></i></button>' +
                '<button type="button" data-oc-toggle="clear" data-oc-target="#input-variant-image-' + index + '" data-oc-thumb="#thumb-variant-image-' + index + '" class="btn btn-outline-warning"><i class="fa-regular fa-trash-can"></i></button>' +
              '</div>' +
            '</div>' +
            '<input type="hidden" name="product_variant[' + index + '][image]" value="' + escapeHtml(variant.image || '') + '" id="input-variant-image-' + index + '" data-field="image"/>' +
          '</td>' +
          '<td class="text-end">' +
            '<button type="button" class="btn btn-sm btn-outline-danger" data-action="remove-variant"><i class="fa-solid fa-trash-can"></i></button>' +
          '</td>' +
        '</tr>';
}

function refreshVariantTable() {
    if (!variantTableBody) {
        return;
    }

    if (!variantRows.length) {
        variantTableBody.innerHTML = '';

        if (variantEmptyHint) {
            variantEmptyHint.classList.remove('d-none');
        }

        return;
    }

    variantRows.forEach((variant, index) => {
        variant.sort_order = index + 1;
    });

    const html = variantRows.map((variant, index) => renderVariantRow(variant, index)).join('');

    variantTableBody.innerHTML = html;

    if (variantEmptyHint) {
        variantEmptyHint.classList.add('d-none');
    }

    if (window.jQuery && window.jQuery.fn && typeof window.jQuery.fn.tooltip === 'function') {
        window.jQuery(variantTableBody).find('[data-bs-toggle="tooltip"]').tooltip({container: 'body'});
    }
}

function collectSelectedSpecValues() {
    const grid = document.getElementById('spec-option-grid');
    const selection = [];

    if (!grid) {
        return selection;
    }

    grid.querySelectorAll('.spec-option-card').forEach((card) => {
        const optionId = parseInt(card.dataset.specOption, 10);
        const values = Array.from(card.querySelectorAll('input[type="checkbox"]:checked')).map((input) => parseInt(input.value, 10));

        if (values.length) {
            selection.push({
                optionId,
                values
            });
        }
    });

    return selection;
}

function cartesianProduct(selected) {
    if (!selected.length) {
        return [];
    }

    const results = [];
    const stack = [];

    function dfs(depth) {
        if (depth === selected.length) {
            results.push(stack.slice());

            return;
        }

        selected[depth].values.forEach((valueId) => {
            stack.push(valueId);
            dfs(depth + 1);
            stack.pop();
        });
    }

    dfs(0);

    return results;
}

function addVariantsFromSelection() {
    const selected = collectSelectedSpecValues();

    if (!selected.length) {
        window.alert('{{ text_specs_select }}');

        return;
    }

    const combinations = cartesianProduct(selected);

    if (!combinations.length) {
        window.alert('{{ text_specs_select }}');

        return;
    }

    const existingKeys = new Set(variantRows.map((variant) => variantKey(variant.options || [])));
    let appended = 0;

    combinations.forEach((combo) => {
        const key = variantKey(combo);

        if (existingKeys.has(key)) {
            return;
        }

        const labels = buildOptionLabels(combo);

        variantRows.push({
            variant_id: 0,
            sku: '',
            model: '',
            price: '',
            quantity: 0,
            weight: '',
            status: 1,
            sort_order: variantRows.length + 1,
            image: '',
            thumb: variantPlaceholder,
            options: combo,
            option_labels: labels,
            images: []
        });

        existingKeys.add(key);
        appended += 1;
    });

    if (!appended) {
        window.alert('{{ text_variant_exists }}');
    }

    refreshVariantTable();
}

const initialVariants = {{ product_variants|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }};

if (Array.isArray(initialVariants) && initialVariants.length) {
    variantRows = initialVariants.map((variant) => ({
        variant_id: parseInt(variant.variant_id ?? 0, 10) || 0,
        sku: variant.sku || '',
        model: variant.model || '',
        price: variant.price ?? '',
        quantity: parseInt(variant.quantity ?? 0, 10) || 0,
        weight: variant.weight ?? '',
        status: variant.status ? 1 : 0,
        sort_order: parseInt(variant.sort_order ?? 0, 10) || 0,
        image: variant.image || '',
        thumb: variant.thumb || variantPlaceholder,
        options: Array.isArray(variant.options) ? variant.options.map((value) => parseInt(value, 10)) : [],
        option_labels: Array.isArray(variant.option_labels) ? variant.option_labels : [],
        images: Array.isArray(variant.images) ? variant.images : []
    }));
}

refreshVariantTable();

if (buttonGenerateVariants) {
    buttonGenerateVariants.addEventListener('click', function(e) {
        e.preventDefault();
        addVariantsFromSelection();
    });
}

if (buttonClearVariants) {
    buttonClearVariants.addEventListener('click', function(e) {
        e.preventDefault();

        if (window.confirm('{{ text_clear_variant_confirm }}')) {
            variantRows = [];
            refreshVariantTable();
        }
    });
}

if (variantTableBody) {
    variantTableBody.addEventListener('input', function(event) {
        const input = event.target;
        const row = input.closest('tr[data-variant-index]');

        if (!row) {
            return;
        }

        const index = parseInt(row.dataset.variantIndex, 10);
        const field = input.dataset.field;

        if (!field || variantRows[index] === undefined) {
            return;
        }

        let value = input.value;

        if (field === 'quantity' || field === 'sort_order') {
            value = parseInt(value ?? 0, 10) || 0;
        } else if (field === 'price' || field === 'weight') {
            value = value === '' ? '' : parseFloat(value ?? 0);
        }

        variantRows[index][field] = value;
    });

    variantTableBody.addEventListener('change', function(event) {
        const input = event.target;
        const row = input.closest('tr[data-variant-index]');

        if (!row) {
            return;
        }

        const index = parseInt(row.dataset.variantIndex, 10);
        const field = input.dataset.field;

        if (variantRows[index] === undefined) {
            return;
        }

        if (field === 'status') {
            variantRows[index].status = input.checked ? 1 : 0;
        }

        if (field === 'image') {
            variantRows[index].image = input.value;
            variantRows[index].thumb = input.value ? input.value : variantPlaceholder;
        }
    });

    variantTableBody.addEventListener('click', function(event) {
        const button = event.target.closest('[data-action]');

        if (!button) {
            return;
        }

        const row = button.closest('tr[data-variant-index]');

        if (!row) {
            return;
        }

        const index = parseInt(row.dataset.variantIndex, 10);

        if (button.dataset.action === 'remove-variant') {
            variantRows.splice(index, 1);
            refreshVariantTable();
        }
    });
}
//--></script>

<!-- 动态配置管理JavaScript -->
<script type="text/javascript"><!--
let storageConfigCount = 0;
let storageTemplates = {};

// 加载存储配置模板
async function loadStorageTemplates() {
    try {
        const response = await fetch('index.php?route=catalog/product_option_manager.getStorageTemplates&user_token=' + getToken());
        const data = await response.json();
        storageTemplates = data.templates;
        renderStorageTemplates();
        document.getElementById('templateSection').style.display = 'block';
    } catch (error) {
        console.error('加载模板失败:', error);
        alert('加载模板失败，请重试');
    }
}

// 渲染存储配置模板
function renderStorageTemplates() {
    const container = document.getElementById('templateContainer');
    container.innerHTML = '';

    Object.keys(storageTemplates).forEach(templateKey => {
        const template = storageTemplates[templateKey];
        const templateCard = document.createElement('div');
        templateCard.className = 'col-md-4 mb-3';
        templateCard.innerHTML = `
            <div class="card border-info" style="cursor: pointer;" onclick="applyStorageTemplate('${templateKey}')">
                <div class="card-body text-center">
                    <h6 class="card-title">${template.name.zh}</h6>
                    <p class="card-text text-muted">${template.name.en}</p>
                    <small class="text-info">点击应用此模板</small>
                </div>
            </div>
        `;
        container.appendChild(templateCard);
    });
}

// 应用存储配置模板
function applyStorageTemplate(templateKey) {
    const template = storageTemplates[templateKey];
    clearStorageConfigurations();
    
    // 添加配置项
    template.values.forEach(value => {
        addStorageConfigurationFromTemplate(value);
    });
    
    updateStoragePreview();
}

// 从模板添加存储配置
function addStorageConfigurationFromTemplate(value) {
    const container = document.getElementById('storageConfigurations');
    
    const configHtml = `
        <div class="row mb-3 config-item" data-config-index="${storageConfigCount}">
            <div class="col-md-3">
                <label class="form-label">配置名称</label>
                <input type="text" class="form-control" value="${value.value}" data-field="storage_value" placeholder="128GB">
            </div>
            <div class="col-md-2">
                <label class="form-label">价格调整</label>
                <div class="input-group">
                    <select class="form-select" data-field="price_prefix">
                        <option value="+">+</option>
                        <option value="-">-</option>
                    </select>
                    <input type="number" class="form-control" value="0" data-field="price_adjustment" placeholder="0" step="0.01">
                </div>
            </div>
            <div class="col-md-2">
                <label class="form-label">库存数量</label>
                <input type="number" class="form-control" value="100" data-field="quantity" placeholder="100">
            </div>
            <div class="col-md-2">
                <label class="form-label">英文名称</label>
                <input type="text" class="form-control" value="${value.en}" data-field="en_name" placeholder="128GB">
            </div>
            <div class="col-md-2">
                <label class="form-label">中文名称</label>
                <input type="text" class="form-control" value="${value.zh}" data-field="zh_name" placeholder="128GB">
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button type="button" class="btn btn-danger btn-sm" onclick="removeStorageConfiguration(this)">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    `;
    
    container.insertAdjacentHTML('beforeend', configHtml);
    storageConfigCount++;
}

// 添加新的存储配置
function addStorageConfiguration() {
    const container = document.getElementById('storageConfigurations');
    
    const configHtml = `
        <div class="row mb-3 config-item" data-config-index="${storageConfigCount}">
            <div class="col-md-3">
                <label class="form-label">配置名称</label>
                <input type="text" class="form-control" data-field="storage_value" placeholder="128GB">
            </div>
            <div class="col-md-2">
                <label class="form-label">价格调整</label>
                <div class="input-group">
                    <select class="form-select" data-field="price_prefix">
                        <option value="+">+</option>
                        <option value="-">-</option>
                    </select>
                    <input type="number" class="form-control" value="0" data-field="price_adjustment" placeholder="0" step="0.01">
                </div>
            </div>
            <div class="col-md-2">
                <label class="form-label">库存数量</label>
                <input type="number" class="form-control" value="100" data-field="quantity" placeholder="100">
            </div>
            <div class="col-md-2">
                <label class="form-label">英文名称</label>
                <input type="text" class="form-control" data-field="en_name" placeholder="128GB">
            </div>
            <div class="col-md-2">
                <label class="form-label">中文名称</label>
                <input type="text" class="form-control" data-field="zh_name" placeholder="128GB">
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button type="button" class="btn btn-danger btn-sm" onclick="removeStorageConfiguration(this)">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    `;
    
    container.insertAdjacentHTML('beforeend', configHtml);
    storageConfigCount++;
    
    updateStoragePreview();
}

// 移除存储配置
function removeStorageConfiguration(button) {
    button.closest('.config-item').remove();
    updateStoragePreview();
}

// 清空存储配置
function clearStorageConfigurations() {
    document.getElementById('storageConfigurations').innerHTML = '';
    storageConfigCount = 0;
}

// 更新存储配置预览
function updateStoragePreview() {
    const configurations = getStorageConfigurations();
    const preview = document.getElementById('configPreview');
    const content = document.getElementById('previewContent');
    
    if (configurations.length === 0) {
        preview.style.display = 'none';
        return;
    }
    
    preview.style.display = 'block';
    
    let html = '';
    configurations.forEach((config, index) => {
        const pricePrefix = config.price_prefix || '+';
        const priceAdjustment = config.price_adjustment || 0;
        const basePrice = parseFloat(document.getElementById('input-price').value) || 0;
        const finalPrice = basePrice + (pricePrefix === '+' ? priceAdjustment : -priceAdjustment);
        
        html += `
            <div class="col-md-3 mb-2">
                <div class="card border-success">
                    <div class="card-body p-2">
                        <h6 class="card-title">${config.storage_value}</h6>
                        <p class="card-text">
                            <small class="text-muted">${pricePrefix}$${priceAdjustment}</small><br>
                            <strong class="text-success">$${finalPrice.toFixed(2)}</strong>
                        </p>
                    </div>
                </div>
            </div>
        `;
    });
    
    content.innerHTML = html;
}

// 获取所有存储配置
function getStorageConfigurations() {
    const configurations = [];
    const configItems = document.querySelectorAll('.config-item');
    
    configItems.forEach(item => {
        const config = {
            storage_value: item.querySelector('[data-field="storage_value"]').value,
            price_prefix: item.querySelector('[data-field="price_prefix"]').value,
            price_adjustment: parseFloat(item.querySelector('[data-field="price_adjustment"]').value) || 0,
            quantity: parseInt(item.querySelector('[data-field="quantity"]').value) || 100,
            en_name: item.querySelector('[data-field="en_name"]').value,
            zh_name: item.querySelector('[data-field="zh_name"]').value
        };
        
        if (config.storage_value) {
            configurations.push(config);
        }
    });
    
    return configurations;
}

// 保存存储配置到产品
async function saveStorageConfigurations() {
    const configurations = getStorageConfigurations();
    
    if (configurations.length === 0) {
        alert('请至少添加一个配置');
        return;
    }
    
    const data = {
        product_id: getProductId(),
        option_name: {
            en: 'Storage Capacity',
            zh: '存储容量'
        },
        configurations: configurations
    };
    
    try {
        const response = await fetch('index.php?route=catalog/product_option_manager.addStorageToProduct&user_token=' + getToken(), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
            alert('存储配置保存成功！');
        } else {
            alert('保存失败: ' + (result.error?.warning || '未知错误'));
        }
    } catch (error) {
        console.error('保存失败:', error);
        alert('保存失败，请重试');
    }
}

// 获取产品ID
function getProductId() {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get('product_id') || 0;
}

// 获取用户token
function getToken() {
    // 方法1: 从隐藏输入框获取
    const tokenInput = document.querySelector('input[name="user_token"]');
    if (tokenInput && tokenInput.value) {
        return tokenInput.value;
    }
    
    // 方法2: 从URL参数获取
    const urlParams = new URLSearchParams(window.location.search);
    const urlToken = urlParams.get('user_token');
    if (urlToken) {
        return urlToken;
    }
    
    // 方法3: 从任何链接中提取
    const links = document.querySelectorAll('a[href*="user_token="]');
    if (links.length > 0) {
        const href = links[0].href;
        const match = href.match(/user_token=([^&]+)/);
        if (match) {
            return match[1];
        }
    }
    
    return '';
}

// 测试连接
async function testConnection() {
    const token = getToken();
    console.log('Token:', token ? (token.substring(0, 20) + '...') : 'NULL');
    
    // 测试1: 简单控制器测试
    try {
        console.log('=== 测试1: 简单控制器 ===');
        const testResponse = await fetch('index.php?route=catalog/test.simple&user_token=' + token);
        console.log('Test controller status:', testResponse.status);
        const testText = await testResponse.text();
        console.log('Test controller response:', testText.substring(0, 500));
        
        if (testResponse.ok) {
            try {
                const testJson = JSON.parse(testText);
                console.log('Test controller JSON:', testJson);
                alert('简单控制器测试成功！\n\n' + JSON.stringify(testJson, null, 2));
                return;
            } catch (e) {
                console.error('Test controller JSON parse error:', e);
            }
        }
    } catch (error) {
        console.error('Test controller error:', error);
    }
    
    // 测试2: 权限测试
    try {
        console.log('=== 测试2: 权限测试 ===');
        const permResponse = await fetch('index.php?route=catalog/test_controller.testPermission&user_token=' + token);
        console.log('Permission test status:', permResponse.status);
        const permText = await permResponse.text();
        console.log('Permission test response:', permText.substring(0, 500));
        
        if (permResponse.ok) {
            try {
                const permJson = JSON.parse(permText);
                console.log('Permission test JSON:', permJson);
                alert('权限测试结果：\n\n' + JSON.stringify(permJson, null, 2));
                return;
            } catch (e) {
                console.error('Permission test JSON parse error:', e);
            }
        }
    } catch (error) {
        console.error('Permission test error:', error);
    }
    
    // 测试3: 带下划线的控制器测试
    try {
        console.log('=== 测试3: 带下划线的控制器 ===');
        const testOptResponse = await fetch('index.php?route=catalog/product_option_test.testTemplates&user_token=' + token);
        console.log('ProductOptionTest status:', testOptResponse.status);
        const testOptText = await testOptResponse.text();
        console.log('ProductOptionTest response:', testOptText.substring(0, 500));
        
        if (testOptResponse.ok) {
            try {
                const testOptJson = JSON.parse(testOptText);
                console.log('ProductOptionTest JSON:', testOptJson);
                alert('带下划线的控制器测试成功！\n\n这说明路由系统工作正常。\n\n' + JSON.stringify(testOptJson, null, 2));
                return;
            } catch (e) {
                console.error('ProductOptionTest JSON parse error:', e);
            }
        }
    } catch (error) {
        console.error('ProductOptionTest error:', error);
    }
    
    // 测试4: 原始控制器测试
    try {
        console.log('=== 测试4: 原始控制器 ===');
        const response = await fetch('index.php?route=catalog/product_option_manager.getStorageTemplates&user_token=' + token);
        console.log('Response status:', response.status);
        console.log('Response headers:', Object.fromEntries(response.headers.entries()));
        const text = await response.text();
        console.log('Response (first 1000 chars):', text.substring(0, 1000));
        
        try {
            const json = JSON.parse(text);
            console.log('JSON parsed successfully:', json);
            alert('原始控制器测试成功！\n\nToken: ' + token.substring(0, 20) + '...\n响应状态: ' + response.status);
        } catch (e) {
            console.error('JSON parse error:', e);
            console.error('Response text:', text);
            alert('原始控制器测试失败：服务器返回了非JSON响应。\n\n返回内容类型：' + response.headers.get('content-type') + '\n\n请查看控制台获取详细错误信息。\n\n可能的原因：\n1. 控制器文件有语法错误\n2. 类名或命名空间不正确\n3. 控制器返回了错误页面');
        }
    } catch (error) {
        console.error('Fetch error:', error);
        alert('连接测试失败：' + error.message);
    }
}

// 为iPhone产品添加选项
async function addIphoneOptions() {
    if (!confirm('确定要为所有iPhone产品添加颜色和存储选项吗？\n\n此操作将会：\n1. 创建颜色和存储选项（如果不存在）\n2. 为所有iPhone产品添加这些选项\n3. 跳过已有选项的产品')) {
        return;
    }
    
    // 显示加载提示
    const loadingAlert = document.createElement('div');
    loadingAlert.className = 'alert alert-info';
    loadingAlert.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 正在处理，请稍候...';
    loadingAlert.style.position = 'fixed';
    loadingAlert.style.top = '20px';
    loadingAlert.style.right = '20px';
    loadingAlert.style.zIndex = '9999';
    document.body.appendChild(loadingAlert);
    
    try {
        const token = getToken();
        
        if (!token) {
            throw new Error('无法获取用户Token。请确保已登录后台管理系统。');
        }
        
        const response = await fetch('index.php?route=catalog/product_option_manager.addIphoneOptions&user_token=' + token, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        // 检查响应内容类型
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
            const text = await response.text();
            console.error('收到的响应:', text.substring(0, 500));
            throw new Error('服务器返回了非JSON响应。可能是：\n1. 用户未登录或会话过期\n2. Token无效\n3. 没有权限执行此操作\n\n请刷新页面重新登录后再试。');
        }
        
        const result = await response.json();
        
        // 移除加载提示
        document.body.removeChild(loadingAlert);
        
        if (result.success) {
            // 显示成功消息
            let message = result.message || 'iPhone产品选项添加成功！';
            if (result.results && result.results.length > 0) {
                message += '\n\n详细信息：\n' + result.results.join('\n');
            }
            alert(message);
            
            // 刷新页面
            if (confirm('操作成功！是否刷新页面查看结果？')) {
                location.reload();
            }
        } else {
            // 显示错误消息
            let errorMsg = '添加失败\n\n';
            if (result.error) {
                if (typeof result.error === 'string') {
                    errorMsg += result.error;
                } else if (result.error.warning) {
                    errorMsg += result.error.warning;
                } else {
                    errorMsg += JSON.stringify(result.error);
                }
            } else {
                errorMsg += '未知错误';
            }
            
            if (result.results && result.results.length > 0) {
                errorMsg += '\n\n详细信息：\n' + result.results.join('\n');
            }
            
            alert(errorMsg);
        }
    } catch (error) {
        // 移除加载提示
        if (document.body.contains(loadingAlert)) {
            document.body.removeChild(loadingAlert);
        }
        
        console.error('添加失败:', error);
        alert('添加失败，请重试\n\n错误信息：' + error.message);
    }
}

/**
 * 批量添加iPhone选项 - 使用新的简化控制器
 */
async function batchAddIphoneOptions() {
    if (!confirm('使用新的批量添加方法为所有iPhone产品添加选项？\n\n此方法：\n✓ 直接操作数据库\n✓ 自动防重复\n✓ 完整错误提示\n\n是否继续？')) {
        return;
    }
    
    const loadingAlert = document.createElement('div');
    loadingAlert.className = 'alert alert-primary';
    loadingAlert.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i><strong>正在批量处理...</strong><br><small>请勿关闭页面</small>';
    loadingAlert.style.position = 'fixed';
    loadingAlert.style.top = '50%';
    loadingAlert.style.left = '50%';
    loadingAlert.style.transform = 'translate(-50%, -50%)';
    loadingAlert.style.zIndex = '9999';
    loadingAlert.style.padding = '30px';
    loadingAlert.style.borderRadius = '10px';
    loadingAlert.style.boxShadow = '0 4px 20px rgba(0,0,0,0.3)';
    loadingAlert.style.minWidth = '300px';
    loadingAlert.style.textAlign = 'center';
    document.body.appendChild(loadingAlert);
    
    try {
        const token = getToken();
        
        if (!token) {
            throw new Error('无法获取用户Token');
        }
        
        // 第一步：测试连接
        loadingAlert.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i><strong>1/3 测试连接...</strong>';
        const testResponse = await fetch('index.php?route=catalog/iphone_option_batch&user_token=' + token);
        const testText = await testResponse.text();
        
        console.log('测试响应:', testText);
        
        // 检查是否返回JSON
        let testJson;
        try {
            testJson = JSON.parse(testText);
        } catch (e) {
            console.error('解析JSON失败:', e);
            console.error('收到的内容:', testText.substring(0, 500));
            throw new Error('控制器测试失败：返回了HTML而不是JSON\n\n可能原因：\n1. 用户会话已过期\n2. 文件未正确加载\n3. OpenCart路由问题\n\n请刷新页面重新登录');
        }
        
        if (!testJson.success) {
            throw new Error('控制器测试失败: ' + (testJson.message || '未知错误'));
        }
        
        console.log('✓ 控制器测试通过:', testJson);
        
        // 第二步：调用批量添加
        loadingAlert.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i><strong>2/3 批量添加选项...</strong>';
        const batchResponse = await fetch('index.php?route=catalog/iphone_option_batch.execute&user_token=' + token, {
            method: 'POST'
        });
        
        const batchText = await batchResponse.text();
        console.log('批量添加响应:', batchText);
        
        let batchJson;
        try {
            batchJson = JSON.parse(batchText);
        } catch (e) {
            console.error('解析JSON失败:', e);
            console.error('收到的内容:', batchText.substring(0, 500));
            throw new Error('批量添加失败：返回了非JSON响应\n\n请检查控制台查看详细信息');
        }
        
        // 移除加载提示
        document.body.removeChild(loadingAlert);
        
        // 第三步：显示结果
        if (batchJson.success) {
            let message = '✓ 批量添加成功！\n\n' + batchJson.message;
            
            if (batchJson.results && batchJson.results.length > 0) {
                message += '\n\n━━━━━━━━━━━━━━━━━━\n详细结果：\n';
                message += batchJson.results.join('\n');
            }
            
            alert(message);
            
            if (confirm('操作成功！\n\n是否刷新页面查看结果？')) {
                location.reload();
            }
        } else {
            let errorMsg = '✗ 批量添加失败\n\n' + (batchJson.message || '未知错误');
            
            if (batchJson.results) {
                errorMsg += '\n\n' + batchJson.results.join('\n');
            }
            
            if (batchJson.trace) {
                console.error('错误堆栈:', batchJson.trace);
                errorMsg += '\n\n详细错误已输出到控制台';
            }
            
            alert(errorMsg);
        }
        
    } catch (error) {
        if (document.body.contains(loadingAlert)) {
            document.body.removeChild(loadingAlert);
        }
        
        alert('批量添加失败\n\n' + error.message);
        console.error('批量添加错误:', error);
    }
}

// 页面加载完成后自动加载模板
document.addEventListener('DOMContentLoaded', function() {
    // 为所有输入框添加实时预览更新
    document.addEventListener('input', function(e) {
        if (e.target.matches('[data-field]') || e.target.id === 'input-price') {
            updateStoragePreview();
        }
    });
    
    // 在保存按钮旁边添加保存配置按钮
    const saveButton = document.querySelector('button[type="submit"]');
    if (saveButton) {
        const configSaveButton = document.createElement('button');
        configSaveButton.type = 'button';
        configSaveButton.className = 'btn btn-info me-2';
        configSaveButton.innerHTML = '<i class="fas fa-save"></i> 保存配置';
        configSaveButton.onclick = saveStorageConfigurations;
        saveButton.parentNode.insertBefore(configSaveButton, saveButton);
    }
});

/**
 * 直接添加iPhone选项 - 调用独立PHP脚本
 */
async function directAddIphoneOptions() {
    if (!confirm('确定要为所有iPhone产品批量添加选项吗？\n\n将添加：\n✓ 颜色选项（5-6个）\n✓ 存储选项（3个，含价格调整）\n\n是否继续？')) {
        return;
    }
    
    // 显示加载遮罩
    const overlay = document.createElement('div');
    overlay.style.cssText = 'position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:9999;display:flex;align-items:center;justify-content:center;';
    overlay.innerHTML = '<div style="background:white;padding:40px;border-radius:10px;text-align:center;"><div class="spinner-border text-primary mb-3" style="width:3rem;height:3rem;"></div><h5>正在批量添加...</h5><p class="text-muted">请勿关闭页面</p></div>';
    document.body.appendChild(overlay);
    
    try {
        // 调用独立PHP脚本（在项目根目录）
        const response = await fetch('../add_iphone_options_direct.php', {
            method: 'GET',
            headers: {
                'Accept': 'application/json'
            }
        });
        
        const text = await response.text();
        console.log('响应内容:', text);
        
        let result;
        try {
            result = JSON.parse(text);
        } catch (e) {
            console.error('JSON解析失败:', e);
            console.error('收到的内容:', text);
            throw new Error('服务器返回了无效的JSON格式\n\n' + text.substring(0, 200));
        }
        
        // 移除加载遮罩
        document.body.removeChild(overlay);
        
        // 显示结果
        const resultDiv = document.getElementById('addResult');
        if (resultDiv) {
            resultDiv.style.display = 'block';
            
            if (result.success) {
                resultDiv.className = 'alert alert-success';
                resultDiv.innerHTML = `
                    <h6 class="alert-heading"><i class="fas fa-check-circle me-2"></i>批量添加成功！</h6>
                    <p><strong>${result.message}</strong></p>
                    <hr>
                    <div class="results-detail">
                        ${result.results.map(r => `<div>${r}</div>`).join('')}
                    </div>
                `;
                
                // 显示成功提示
                alert('✓ 批量添加成功！\n\n' + result.message + '\n\n详细信息请查看下方结果');
                
                // 询问是否刷新
                if (confirm('操作已完成！\n\n是否刷新页面以查看最新数据？')) {
                    location.reload();
                }
            } else {
                resultDiv.className = 'alert alert-danger';
                resultDiv.innerHTML = `
                    <h6 class="alert-heading"><i class="fas fa-exclamation-circle me-2"></i>批量添加失败</h6>
                    <p><strong>${result.message}</strong></p>
                    ${result.results ? '<hr><div>' + result.results.join('<br>') + '</div>' : ''}
                `;
                
                alert('✗ 批量添加失败\n\n' + result.message);
            }
        }
        
    } catch (error) {
        // 移除加载遮罩
        if (document.body.contains(overlay)) {
            document.body.removeChild(overlay);
        }
        
        // 显示错误
        const resultDiv = document.getElementById('addResult');
        if (resultDiv) {
            resultDiv.style.display = 'block';
            resultDiv.className = 'alert alert-danger';
            resultDiv.innerHTML = `
                <h6 class="alert-heading"><i class="fas fa-times-circle me-2"></i>操作失败</h6>
                <p>${error.message}</p>
            `;
        }
        
        alert('操作失败\n\n' + error.message + '\n\n请查看浏览器控制台获取详细信息');
        console.error('批量添加错误:', error);
    }
}

// 批量上传本地图片文件（智能分配：第1张→主图，第2张起→附加图片）
function batchUploadImages(files) {
    if (!files || files.length === 0) {
        return;
    }
    
    // 显示加载提示
    const loadingMsg = document.createElement('div');
    loadingMsg.style.cssText = 'position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(0,0,0,0.8);color:white;padding:30px;border-radius:10px;z-index:9999;font-size:18px;';
    loadingMsg.innerHTML = '<i class="fa-solid fa-spinner fa-spin me-2"></i>正在上传 ' + files.length + ' 张图片...';
    document.body.appendChild(loadingMsg);
    
    let uploadedCount = 0;
    let failedCount = 0;
    
    // 逐个上传文件
    Array.from(files).forEach((file, index) => {
        const formData = new FormData();
        formData.append('file', file);
        formData.append('user_token', '{{ user_token }}');
        
        fetch('index.php?route=tool/upload.upload&user_token={{ user_token }}', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.code && data.code !== '') {
                const imagePath = data.code;
                
                // 第1张图片 → 设为主图
                if (index === 0) {
                    document.querySelector('#input-image').value = imagePath;
                    
                    let displayUrl = imagePath;
                    if (!displayUrl.startsWith('http')) {
                        displayUrl = '{{ store }}image/' + displayUrl;
                    }
                    document.querySelector('#thumb-image').src = displayUrl;
                } else {
                    // 第2张起 → 添加到附加图片
                    addAdditionalImage(imagePath, index * 10);
                }
                
                uploadedCount++;
            } else {
                failedCount++;
            }
            
            // 所有文件处理完毕
            if (uploadedCount + failedCount === files.length) {
                document.body.removeChild(loadingMsg);
                
                if (uploadedCount > 0) {
                    alert('✓ 批量上传成功！\n\n' +
                        '成功: ' + uploadedCount + ' 张图片\n' +
                        (failedCount > 0 ? '失败: ' + failedCount + ' 张\n' : '') +
                        '第1张已设为主图片，其余添加到附加图片。\n\n' +
                        '请点击"保存配置"按钮保存！');
                } else {
                    alert('✗ 上传失败\n\n所有图片上传失败，请重试！');
                }
            }
        })
        .catch(error => {
            failedCount++;
            console.error('上传错误:', error);
            
            if (uploadedCount + failedCount === files.length) {
                document.body.removeChild(loadingMsg);
                alert('✗ 上传过程中出现错误\n\n成功: ' + uploadedCount + ' 张\n失败: ' + failedCount + ' 张');
            }
        });
    });
}

// 批量导入图片URL（智能分配：第1张→主图，第2张起→附加图片）
function batchImportImageUrls() {
    const urls = prompt(
        '批量导入图片URL\n\n' +
        '请输入图片URL，每行一个：\n' +
        '支持格式：\n' +
        '1. 完整URL: https://example.com/image1.jpg\n' +
        '2. 相对路径: catalog/products/image1.jpg\n\n' +
        '智能分配：第1张自动设为主图片，第2张起添加到附加图片。',
        'catalog/products/image1.jpg\ncatalog/products/image2.jpg\ncatalog/products/image3.jpg'
    );
    
    if (urls === null || urls.trim() === '') {
        return;
    }
    
    // 按行分割URL
    const urlList = urls.split('\n')
        .map(url => url.trim())
        .filter(url => url.length > 0);
    
    if (urlList.length === 0) {
        alert('没有找到有效的图片URL！');
        return;
    }
    
    let successCount = 0;
    let failCount = 0;
    
    urlList.forEach(function(url, index) {
        // 验证URL格式
        const urlPattern = /^(https?:\/\/|catalog\/|image\/)/i;
        if (!urlPattern.test(url)) {
            failCount++;
            return;
        }
        
        // 第1张图片 → 设为主图
        if (index === 0) {
            document.querySelector('#input-image').value = url;
            
            let displayUrl = url;
            if (!displayUrl.startsWith('http')) {
                displayUrl = '{{ store }}image/' + displayUrl;
            }
            document.querySelector('#thumb-image').src = displayUrl;
        } else {
            // 第2张起 → 添加到附加图片
            addAdditionalImage(url, index * 10);
        }
        
        successCount++;
    });
    
    if (successCount > 0) {
        alert('✓ 批量导入成功！\n\n' +
            '成功: ' + successCount + ' 个图片\n' +
            (failCount > 0 ? '失败: ' + failCount + ' 个（格式不正确）\n' : '') +
            '第1张已设为主图片，其余添加到附加图片。\n\n' +
            '请点击"保存配置"按钮保存！');
    } else {
        alert('✗ 批量导入失败\n\n所有URL格式都不正确！\n\n请检查URL格式。');
    }
}

// 添加附加图片的辅助函数
function addAdditionalImage(imagePath, sortOrder) {
    const currentImageRow = image_row;
    
    let html = '<tr id="product-image-row-' + currentImageRow + '">';
    html += '  <td><div class="border rounded d-block" style="max-width: 300px;">';
    
    // 构建显示URL
    let displayUrl = imagePath;
    if (imagePath && !displayUrl.startsWith('http')) {
        displayUrl = 'index.php?route=tool/image&image=' + encodeURIComponent(imagePath) + '&user_token={{ user_token }}';
    } else if (!imagePath) {
        displayUrl = '{{ placeholder|escape('js') }}';
    }
    
    html += '    <img src="' + displayUrl + '" alt="" title="" id="thumb-image-' + currentImageRow + '" data-oc-placeholder="{{ placeholder|escape('js') }}" class="img-fluid"/> <input type="hidden" name="product_image[' + currentImageRow + '][image]" value="' + imagePath + '" id="input-product-image-' + currentImageRow + '"/>';
    html += '    <div class="d-grid">';
    html += '      <button type="button" data-oc-toggle="image" data-oc-target="#input-product-image-' + currentImageRow + '" data-oc-thumb="#thumb-image-' + currentImageRow + '" class="btn btn-primary rounded-0"><i class="fa-solid fa-pencil"></i> {{ button_edit|escape('js') }}</button>';
    html += '      <button type="button" data-oc-toggle="clear" data-oc-target="#input-product-image-' + currentImageRow + '" data-oc-thumb="#thumb-image-' + currentImageRow + '" class="btn btn-warning rounded-0"><i class="fa-regular fa-trash-can"></i> {{ button_clear|escape('js') }}</button>';
    html += '    </div>';
    html += '    <div class="mt-2">';
    html += '      <label class="form-label small">或直接输入图片链接：</label>';
    html += '      <div class="input-group input-group-sm">';
    html += '        <input type="text" id="input-image-url-' + currentImageRow + '" class="form-control" placeholder="输入完整URL或相对路径" value="' + imagePath + '"/>';
    html += '        <button type="button" class="btn btn-success btn-apply-image-url" data-row="' + currentImageRow + '"><i class="fa-solid fa-check"></i> 应用</button>';
    html += '      </div>';
    html += '      <small class="text-muted">支持相对路径(catalog/...)或完整URL(https://...)</small>';
    html += '    </div>';
    html += '  </div></td>';
    html += '  <td><input type="text" name="product_image[' + currentImageRow + '][sort_order]" value="' + sortOrder + '" placeholder="{{ entry_sort_order|escape('js') }}" class="form-control"/></td>';
    html += '  <td class="text-end"><button type="button" onclick="$(\'#product-image-row-' + currentImageRow + '\').remove();" data-bs-toggle="tooltip" title="{{ button_remove|escape('js') }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button></td>';
    html += '</tr>';
    
    $('#product-image tbody').append(html);
    
    image_row++;
}

// 主图链接应用按钮事件处理
$('#button-apply-main-image-url').on('click', function() {
    const url = $('#input-main-image-url').val().trim();
    
    if (url === '') {
        alert('请输入图片链接！');
        return;
    }
    
    // 验证URL格式
    const urlPattern = /^(https?:\/\/|catalog\/|image\/)/i;
    if (!urlPattern.test(url)) {
        alert('请输入有效的图片URL或相对路径！\n\n示例:\n- https://example.com/image.jpg\n- catalog/products/image.jpg');
        return;
    }
    
    // 关键：先设置隐藏输入框的值
    $('#input-image').val(url);
    console.log('主图URL已设置:', url);
    console.log('隐藏input值:', $('#input-image').val());
    
    // 设置缩略图显示
    let displayUrl = url;
    if (url.startsWith('http://') || url.startsWith('https://')) {
        // 完整URL直接使用
        displayUrl = url;
    } else {
        // 相对路径通过image工具处理
        displayUrl = 'index.php?route=tool/image&image=' + encodeURIComponent(url) + '&user_token={{ user_token }}';
    }
    
    const thumbElement = $('#thumb-image')[0];
    if (thumbElement) {
        const originalSrc = thumbElement.src;
        
        thumbElement.onerror = function() {
            alert('警告：图片可能无法加载，请检查URL是否正确！\n\n' + url);
            thumbElement.src = originalSrc;
        };
        
        thumbElement.onload = function() {
            alert('✓ 主图链接已应用成功！\n\n' + url + '\n\n请点击保存按钮以保存更改。');
        };
        
        thumbElement.src = displayUrl;
    }
});

// 附加图片链接应用按钮事件处理（使用事件委托处理动态添加的按钮）
$(document).on('click', '.btn-apply-image-url', function() {
    const row = $(this).data('row');
    const url = $('#input-image-url-' + row).val().trim();
    
    if (url === '') {
        alert('请输入图片链接！');
        return;
    }
    
    // 验证URL格式
    const urlPattern = /^(https?:\/\/|catalog\/|image\/)/i;
    if (!urlPattern.test(url)) {
        alert('请输入有效的图片URL或相对路径！\n\n示例:\n- https://example.com/image.jpg\n- catalog/products/image.jpg');
        return;
    }
    
    // 关键：先设置隐藏输入框的值
    $('#input-product-image-' + row).val(url);
    console.log('附加图片' + row + 'URL已设置:', url);
    console.log('隐藏input值:', $('#input-product-image-' + row).val());
    
    // 设置缩略图显示
    let displayUrl = url;
    if (url.startsWith('http://') || url.startsWith('https://')) {
        // 完整URL直接使用
        displayUrl = url;
    } else {
        // 相对路径通过image工具处理
        displayUrl = 'index.php?route=tool/image&image=' + encodeURIComponent(url) + '&user_token={{ user_token }}';
    }
    
    const thumbElement = $('#thumb-image-' + row)[0] || $('#product-image-' + row)[0];
    if (thumbElement) {
        const originalSrc = thumbElement.src;
        
        thumbElement.onerror = function() {
            alert('警告：图片可能无法加载，请检查URL是否正确！\n\n' + url);
            thumbElement.src = originalSrc;
        };
        
        thumbElement.onload = function() {
            alert('✓ 图片链接已应用成功！\n\n' + url + '\n\n请点击保存按钮以保存更改。');
        };
        
        thumbElement.src = displayUrl;
    }
});

// 页面加载时自动添加6个空的附加图片位（仅在新建商品时）
$(document).ready(function() {
    // 检查是否是新建商品（没有product_id或者附加图片列表为空）
    const existingImageCount = $('#product-image tbody tr').length;
    
    // 如果是新建商品（没有现有附加图片），自动添加6个空位
    if (existingImageCount === 0) {
        for (let i = 0; i < 6; i++) {
            addProductImage('', i + 1);
        }
    }
});

//--></script>

{{ footer }}












 
 
